export = Uu5DnD;
declare namespace Uu5DnD {
    interface Draggable$Props {
        category: string;
        data: any;
        draggable?: boolean;
        dropEffect?: "move" | "copy";
        isDragging?(...args: any): any;
    }
    function Draggable(props: Draggable$Props): any;
    interface Droppable$Props {
        categoryList: string[];
        droppable?: boolean | ((...args: any)=>any);
        onHover?(...args: any): any;
        onDrop?(...args: any): any;
    }
    function Droppable(props: Droppable$Props): any;
    interface withDraggable$1 {
        sourceRefProp?: any;
    }
    function withDraggable(Comp: any, _?: withDraggable$1): any;
    function withDroppableItemList(Comp: any, ChildComp: any): any;
    namespace _reactDnd16 {
    }
    namespace _reactDnd16Html5Backend {
    }
    namespace _reactDnd16TouchBackend {
    }
    const _reactDnd7: {
        DragDropContext(backendFactory: any, backendContext: any, debugMode: any): any;
        DragSource(type: any, spec: any, collect: any, options: any): any;
        DropTarget(types: any, spec: any, collect: any, options: any): any;
        DragDropContextConsumer(props: any): any;
    };
    function _reactDnd7Html5Backend(...args: any): any;
    namespace _reactDnd7Html5Backend {
        const _default: any;
    }
    function _reactDnd7TouchBackend(...args: any): any;
    namespace _reactDnd7TouchBackend {
        const _default: any;
    }
}