/*!
 * uu5g04 library with basic visual components
 * Copyright (C) 2021 Unicorn a.s.
 * 
 * This program is free software: you can redistribute it and/or modify
 * it under the terms of the GNU General Public License as published by
 * the Free Software Foundation, either version 3 of the License, or
 * (at your option) any later version.
 * 
 * This program is distributed in the hope that it will be useful,
 * but WITHOUT ANY WARRANTY; without even the implied warranty of
 * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the
 * GNU General Public License for more details.
 * 
 * You should have received a copy of the GNU General Public License
 * along with this program. If not, see Licenses - GNU Project <https://gnu.org/licenses/>.
 */
"use strict";
(this["__webpack_jsonp_uu5g04_1_58_8_uu5g04_bricks"] = this["__webpack_jsonp_uu5g04_1_58_8_uu5g04_bricks"] || []).push([["bricks_internal_row-editable_js"],{

/***/ "./bricks/internal/modal-editation-components.js":
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "CardInline": () => (/* binding */ CardInline),
/* harmony export */   "ColWidthEditComponent": () => (/* binding */ ColWidthEditComponent),
/* harmony export */   "ContentInput": () => (/* binding */ ContentInput),
/* harmony export */   "EditItemInfo": () => (/* binding */ EditItemInfo),
/* harmony export */   "LineVertical": () => (/* binding */ LineVertical),
/* harmony export */   "PresetEditComponent": () => (/* binding */ PresetEditComponent),
/* harmony export */   "ProgressBarItemStriped": () => (/* binding */ ProgressBarItemStriped),
/* harmony export */   "ProgressBarStriped": () => (/* binding */ ProgressBarStriped),
/* harmony export */   "QRCodeSize": () => (/* binding */ QRCodeSize),
/* harmony export */   "TabsItemNameFix": () => (/* binding */ TabsItemNameFix),
/* harmony export */   "default": () => (__WEBPACK_DEFAULT_EXPORT__)
/* harmony export */ });
/* harmony import */ var uu5g04__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__("uu5g04");
/* harmony import */ var uu5g04__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(uu5g04__WEBPACK_IMPORTED_MODULE_0__);
/* harmony import */ var _bricks_editable_ns_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__("./bricks/internal/bricks-editable-ns.js");
/* harmony import */ var _confirm_modal_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__("./bricks/confirm-modal.js");
/* harmony import */ var _icon_js__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__("./bricks/icon.js");
/* harmony import */ var _lsi_js__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__("./bricks/lsi.js");
/* harmony import */ var _bricks_editable_lsi_js__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__("./bricks/internal/bricks-editable-lsi.js");
/* harmony import */ var _css_js__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__("./bricks/internal/css.js");
let _ = t => t,
  _t,
  _t2;
//@@viewOn:imports







//@@viewOff:imports

//@@viewOn:revision
// coded: Martin Mach, 20.09.2020
// reviewed: -
//@@viewOff:revision

const COLUMN_PRESETS = {
  "1:1": ["s-6", "s-6"],
  "1:2": ["m-4", "m-8"],
  "2:1": ["m-8", "m-4"],
  "1:1:1": ["s-6 m-4", "s-6 m-4", "m-4"],
  "1:1:1:1": ["s-6 m-3", "s-6 m-3", "s-6 m-3", "s-6 m-3"]
};
const PresetEditComponent = uu5g04__WEBPACK_IMPORTED_MODULE_0___default().Common.VisualComponent.create({
  //@@viewOn:mixins
  mixins: [(uu5g04__WEBPACK_IMPORTED_MODULE_0___default().Common.BaseMixin)],
  //@@viewOff:mixins

  //@@viewOn:statics
  statics: {
    tagName: "PresetEditComponent",
    classNames: {
      main: _bricks_editable_ns_js__WEBPACK_IMPORTED_MODULE_1__["default"].css("row-properties-category")
    },
    lsi: () => _bricks_editable_lsi_js__WEBPACK_IMPORTED_MODULE_5__["default"].row
  },
  //@@viewOff:statics

  //@@viewOn:propTypes
  propTypes: {
    componentProps: (uu5g04__WEBPACK_IMPORTED_MODULE_0___default().PropTypes.object),
    items: uu5g04__WEBPACK_IMPORTED_MODULE_0___default().PropTypes.arrayOf((uu5g04__WEBPACK_IMPORTED_MODULE_0___default().PropTypes.object)),
    onChangeProps: (uu5g04__WEBPACK_IMPORTED_MODULE_0___default().PropTypes.func),
    onChangeItems: (uu5g04__WEBPACK_IMPORTED_MODULE_0___default().PropTypes.func)
  },
  //@@viewOff:propTypes

  //@@viewOn:getDefaultProps
  getDefaultProps() {
    return {
      componentProps: undefined,
      items: undefined,
      onChangeProps: undefined,
      onChangeItems: undefined
    };
  },
  //@@viewOff:getDefaultProps

  //@@viewOn:reactLifeCycle
  getInitialState() {
    this._pendingOnChange;
    return {
      confirmModalOpen: false
    };
  },
  //@@viewOff:reactLifeCycle

  //@@viewOn:interface
  //@@viewOff:interface

  //@@viewOn:overridingMethods
  //@@viewOff:overridingMethods

  //@@viewOn:private
  _onConfirmModalRegister(modal) {
    modal.open();
  },
  _onRefuse() {
    this._pendingOnChange = undefined;
    this.setState({
      confirmModalOpen: false
    });
  },
  _onConfirm() {
    this.setState({
      confirmModalOpen: false
    }, this._changePreset);
  },
  _adjustItemsColWidth(items, preset) {
    if (items.length === preset.length) {
      return items.map((item, index) => {
        return {
          ...item,
          props: {
            ...item.props,
            colWidth: preset[index]
          }
        };
      });
    } else {
      this.showError("ColWidth couldn't be correctly adjusted because the number of items doesnt match the number of preset's items.");
    }
  },
  _onChange({
    value
  }) {
    let changeType = "safe";
    let items = Array.isArray(this.props.items) ? [...this.props.items] : [];
    let preset = COLUMN_PRESETS[value];
    if (preset.length < items.length) {
      changeType = "destructing";
      items.splice(preset.length, items.length);
    } else if (preset.length > items.length) {
      changeType = "adjusting";
      while (preset.length > items.length) {
        items.push({}); // just create an item (empty object). adjustItemsColWidth will do the rest
      }
    }
    // else { // the amount of items is just right }

    items = this._adjustItemsColWidth(items, preset);
    if (changeType === "safe" || changeType === "adjusting") {
      this._changePreset(items);
    } else if (changeType === "destructing") {
      this._pendingOnChange = items;
      this._openConfirmModal();
    }
  },
  _openConfirmModal() {
    this.setState({
      confirmModalOpen: true
    });
  },
  _getConfirmModal() {
    return Uu5g05.Utils.Element.create(_confirm_modal_js__WEBPACK_IMPORTED_MODULE_2__["default"], {
      onRefuse: this._onRefuse,
      onConfirm: this._onConfirm,
      content: this.getLsiComponent("layoutConfirmModalContent"),
      ref_: this._onConfirmModalRegister,
      size: "m",
      header: this.getLsiComponent("layoutConfirmModalHeader"),
      confirmButtonProps: {
        content: this.getLsiComponent("layoutConfirmModalConfirm")
      },
      refuseButtonProps: {
        content: this.getLsiComponent("layoutConfirmModalCancel")
      }
    });
  },
  _changePreset(value) {
    value = value || this._pendingOnChange || null;
    this.props.onChangeItems(value);
    this._pendingOnChange = undefined;
  },
  _getPresetValue() {
    let presetValue = null;
    if (Array.isArray(this.props.items) && this.props.items.length && !this.props.items.find(item => item.tagName !== "UU5.Bricks.Column")) {
      presetValue = Object.keys(COLUMN_PRESETS).find(colRation => {
        let preset = COLUMN_PRESETS[colRation];
        let colNum = preset.length;
        if (colNum === this.props.items.length) {
          let result = preset.find((presetColWidth, index) => {
            let colWidth = this.props.items[index].props.colWidth;
            if (colWidth) {
              // compare built class names because of many different ways to define the colWidth prop
              let propClassName = uu5g04__WEBPACK_IMPORTED_MODULE_0___default().Common.Tools.buildColWidthClassName(colWidth);
              let presetClassName = uu5g04__WEBPACK_IMPORTED_MODULE_0___default().Common.Tools.buildColWidthClassName(presetColWidth);
              return propClassName !== presetClassName;
            } else {
              return true;
            }
          });
          if (!result) {
            return true;
          } else {
            return false;
          }
        } else {
          return false;
        }
      });
    }
    return presetValue;
  },
  //@@viewOff:private

  //@@viewOn:render
  render() {
    return Uu5g05.Utils.Element.create(Uu5g05.Fragment, null, Uu5g05.Utils.Element.create((uu5g04__WEBPACK_IMPORTED_MODULE_0___default().Forms.Select), {
      label: this.getLsiComponent("columnsWidthPresetLabel"),
      value: this._getPresetValue() || "Custom",
      onChange: this._onChange,
      labelColWidth: "xs-12",
      inputColWidth: "x-12",
      labelAlignment: "left"
    }, Uu5g05.Utils.Element.create((uu5g04__WEBPACK_IMPORTED_MODULE_0___default().Forms.Select.Option), {
      value: "Custom",
      hidden: true
    }), Object.keys(COLUMN_PRESETS).map((colRatio, i) => Uu5g05.Utils.Element.create((uu5g04__WEBPACK_IMPORTED_MODULE_0___default().Forms.Select.Option), {
      value: colRatio,
      key: i
    }))), this.state.confirmModalOpen ? this._getConfirmModal() : null);
  }
  //@@viewOff:render
});

const ColWidthEditComponent = uu5g04__WEBPACK_IMPORTED_MODULE_0___default().Common.VisualComponent.create({
  //@@viewOn:mixins
  mixins: [(uu5g04__WEBPACK_IMPORTED_MODULE_0___default().Common.BaseMixin)],
  //@@viewOff:mixins

  //@@viewOn:statics
  statics: {
    tagName: "ColWidthEditComponent",
    classNames: {
      main: _bricks_editable_ns_js__WEBPACK_IMPORTED_MODULE_1__["default"].css("colwidth-edit-component")
    },
    lsi: () => _bricks_editable_lsi_js__WEBPACK_IMPORTED_MODULE_5__["default"].row
  },
  //@@viewOff:statics

  //@@viewOn:propTypes
  propTypes: {
    componentProps: (uu5g04__WEBPACK_IMPORTED_MODULE_0___default().PropTypes.object),
    items: uu5g04__WEBPACK_IMPORTED_MODULE_0___default().PropTypes.arrayOf((uu5g04__WEBPACK_IMPORTED_MODULE_0___default().PropTypes.object)),
    onChangeProps: (uu5g04__WEBPACK_IMPORTED_MODULE_0___default().PropTypes.func),
    onChangeItems: (uu5g04__WEBPACK_IMPORTED_MODULE_0___default().PropTypes.func),
    editedItemId: (uu5g04__WEBPACK_IMPORTED_MODULE_0___default().PropTypes.string)
  },
  //@@viewOff:propTypes

  //@@viewOn:getDefaultProps
  getDefaultProps() {
    return {
      componentProps: undefined,
      items: undefined,
      onChangeProps: undefined,
      onChangeItems: undefined,
      editedItemId: undefined
    };
  },
  //@@viewOff:getDefaultProps

  //@@viewOn:reactLifeCycle
  //@@viewOff:reactLifeCycle

  //@@viewOn:interface
  //@@viewOff:interface

  //@@viewOn:overridingMethods
  //@@viewOff:overridingMethods

  //@@viewOn:private
  _isColWidth(value) {
    let result = true;
    if (typeof value === "string") {
      let colWidthArray = value.trim().split((uu5g04__WEBPACK_IMPORTED_MODULE_0___default().Common.REGEXP.splitByWhiteSpace));
      result = !colWidthArray.find(colWidthPart => !colWidthPart.match((uu5g04__WEBPACK_IMPORTED_MODULE_0___default().Common.REGEXP.columnRegexp)));
    } else {
      result = false;
    }
    return result;
  },
  _onChange({
    value
  }) {
    let items = [...this.props.items];
    let editedItemIndex = items.findIndex(item => item.id === this.props.editedItemId);
    items = items.map(item => ({
      id: item.id
    }));
    if (this._isColWidth(value)) {
      items[editedItemIndex].props = {
        colWidth: value,
        width: null
      };
    } else {
      items[editedItemIndex].props = {
        width: value,
        colWidth: null
      };
    }
    this.props.onChangeItems(items);
  },
  //@@viewOff:private

  //@@viewOn:render
  render() {
    let value;
    let isColWidth = false;
    if (Array.isArray(this.props.items)) {
      if (this.props.items.length) {
        let editedItemIndex = this.props.items.findIndex(item => item.id === this.props.editedItemId);
        value = this.props.items[editedItemIndex].props.width;
        if (!value) {
          value = this.props.items[editedItemIndex].props.colWidth;
          isColWidth = true;
        }
      } else {
        value = "";
      }
    } else {
      value = this.props.componentProps.width;
      if (!value) {
        value = this.props.componentProps.colWidth;
        isColWidth = true;
      }
    }
    if (value && isColWidth && typeof value === "object") {
      // normalize value
      value = uu5g04__WEBPACK_IMPORTED_MODULE_0___default().Common.Tools.buildColWidthClassName(value).replace(/uu5-col-/g, "").replace(/xs|s|m|l|xl/g, match => `${match}-`);
    }
    return Uu5g05.Utils.Element.create((uu5g04__WEBPACK_IMPORTED_MODULE_0___default().Forms.Text), {
      label: this.getLsiComponent("colWidthLabel"),
      message: this.getLsiComponent("colWidthTooltip"),
      value: value,
      onBlur: this._onChange
    });
  }
  //@@viewOff:render
});

const EditItemInfo = () => Uu5g05.Utils.Element.create("div", {
  className: EditItemInfoClassNames.main
}, Uu5g05.Utils.Element.create(_icon_js__WEBPACK_IMPORTED_MODULE_3__["default"], {
  icon: "mdi-information",
  className: EditItemInfoClassNames.icon
}), Uu5g05.Utils.Element.create(_lsi_js__WEBPACK_IMPORTED_MODULE_4__["default"], {
  lsi: _bricks_editable_lsi_js__WEBPACK_IMPORTED_MODULE_5__["default"].common.itemInfo
}));
const EditItemInfoClassNames = {
  main: _css_js__WEBPACK_IMPORTED_MODULE_6__["default"].css(_t || (_t = _`
    display: flex;
    flex-direction: column;
    align-items: center;
    text-align: center;
    color: #303030;
  `)),
  icon: _css_js__WEBPACK_IMPORTED_MODULE_6__["default"].css(_t2 || (_t2 = _`
    color: rgba(0, 0, 0, 0.54);
    font-size: 56px;
  `))
};
const QRCodeSize = ({
  componentProps,
  onChangeProps,
  errors
}) => Uu5g05.Utils.Element.create((uu5g04__WEBPACK_IMPORTED_MODULE_0___default().Forms.Number), {
  min: 32,
  step: 32,
  suffix: "px",
  valueType: "number",
  label: Uu5g05.Utils.Element.create(_lsi_js__WEBPACK_IMPORTED_MODULE_4__["default"], {
    lsi: _bricks_editable_lsi_js__WEBPACK_IMPORTED_MODULE_5__["default"].qRCode.sizeLabel
  }),
  value: componentProps.size,
  feedback: errors && errors.size ? "error" : undefined,
  onChange: ({
    value
  }) => onChangeProps({
    size: value
  }, {
    size: value < 32 || isNaN(value)
  }),
  onBlur: ({
    value
  }) => onChangeProps({
    size: value
  }, {
    size: value < 32 || isNaN(value)
  })
});
const CardInline = ({
  componentProps,
  onChangeProps
}) => Uu5g05.Utils.Element.create((uu5g04__WEBPACK_IMPORTED_MODULE_0___default().Forms.SwitchSelector), {
  items: [{
    content: Uu5g05.Utils.Element.create(_lsi_js__WEBPACK_IMPORTED_MODULE_4__["default"], {
      lsi: _bricks_editable_lsi_js__WEBPACK_IMPORTED_MODULE_5__["default"].common.valueFalse
    }),
    value: false
  }, {
    content: Uu5g05.Utils.Element.create(_lsi_js__WEBPACK_IMPORTED_MODULE_4__["default"], {
      lsi: _bricks_editable_lsi_js__WEBPACK_IMPORTED_MODULE_5__["default"].common.valueTrue
    }),
    value: true
  }],
  value: componentProps.inline,
  label: Uu5g05.Utils.Element.create(_lsi_js__WEBPACK_IMPORTED_MODULE_4__["default"], {
    lsi: _bricks_editable_lsi_js__WEBPACK_IMPORTED_MODULE_5__["default"].card.inlineLabel
  }),
  onChange: ({
    value
  }) => {
    onChangeProps({
      inline: value,
      width: value ? componentProps.width : null,
      minWidth: value ? componentProps.minWidth : null
    });
  }
});
const ProgressBarStriped = ({
  componentProps,
  onChangeProps
}) => Uu5g05.Utils.Element.create((uu5g04__WEBPACK_IMPORTED_MODULE_0___default().Forms.SwitchSelector), {
  items: [{
    content: Uu5g05.Utils.Element.create(_lsi_js__WEBPACK_IMPORTED_MODULE_4__["default"], {
      lsi: _bricks_editable_lsi_js__WEBPACK_IMPORTED_MODULE_5__["default"].progressBar.stripedValueFalse
    }),
    value: false
  }, {
    content: Uu5g05.Utils.Element.create(_lsi_js__WEBPACK_IMPORTED_MODULE_4__["default"], {
      lsi: _bricks_editable_lsi_js__WEBPACK_IMPORTED_MODULE_5__["default"].progressBar.stripedValueTrue
    }),
    value: true
  }],
  value: componentProps.striped,
  label: Uu5g05.Utils.Element.create(_lsi_js__WEBPACK_IMPORTED_MODULE_4__["default"], {
    lsi: _bricks_editable_lsi_js__WEBPACK_IMPORTED_MODULE_5__["default"].progressBar.stripedLabel
  }),
  onChange: ({
    value
  }) => {
    onChangeProps({
      striped: value,
      animated: value ? componentProps.animated : false
    });
  }
});
const ProgressBarItemStriped = ({
  onChangeItems,
  items,
  editedItemId
}) => {
  let editedItemIndex = items.findIndex(item => item.id === editedItemId);
  let editedItem = items[editedItemIndex];
  return Uu5g05.Utils.Element.create((uu5g04__WEBPACK_IMPORTED_MODULE_0___default().Forms.SwitchSelector), {
    items: [{
      content: Uu5g05.Utils.Element.create(_lsi_js__WEBPACK_IMPORTED_MODULE_4__["default"], {
        lsi: _bricks_editable_lsi_js__WEBPACK_IMPORTED_MODULE_5__["default"].progressBar.stripedValueFalse
      }),
      value: false
    }, {
      content: Uu5g05.Utils.Element.create(_lsi_js__WEBPACK_IMPORTED_MODULE_4__["default"], {
        lsi: _bricks_editable_lsi_js__WEBPACK_IMPORTED_MODULE_5__["default"].progressBar.stripedValueTrue
      }),
      value: true
    }],
    value: editedItem.props.striped,
    label: Uu5g05.Utils.Element.create(_lsi_js__WEBPACK_IMPORTED_MODULE_4__["default"], {
      lsi: _bricks_editable_lsi_js__WEBPACK_IMPORTED_MODULE_5__["default"].progressBar.stripedLabel
    }),
    onChange: ({
      value
    }) => {
      let newItems = items.map(item => ({
        id: item.id
      }));
      if (!newItems[editedItemIndex].props) {
        newItems[editedItemIndex].props = {};
      }
      newItems[editedItemIndex].props.striped = value;
      newItems[editedItemIndex].props.animated = value ? newItems[editedItemIndex].animated : false;
      onChangeItems(newItems);
    }
  });
};
const LineVertical = ({
  componentProps,
  onChangeProps
}) => Uu5g05.Utils.Element.create((uu5g04__WEBPACK_IMPORTED_MODULE_0___default().Common.Fragment), null, Uu5g05.Utils.Element.create((uu5g04__WEBPACK_IMPORTED_MODULE_0___default().Forms.SwitchSelector), {
  items: [{
    content: Uu5g05.Utils.Element.create(_lsi_js__WEBPACK_IMPORTED_MODULE_4__["default"], {
      lsi: _bricks_editable_lsi_js__WEBPACK_IMPORTED_MODULE_5__["default"].line.verticalValueFalse
    }),
    value: false
  }, {
    content: Uu5g05.Utils.Element.create(_lsi_js__WEBPACK_IMPORTED_MODULE_4__["default"], {
      lsi: _bricks_editable_lsi_js__WEBPACK_IMPORTED_MODULE_5__["default"].line.verticalValueTrue
    }),
    value: true
  }],
  value: !!componentProps.vertical || typeof componentProps.vertical === "number",
  label: Uu5g05.Utils.Element.create(_lsi_js__WEBPACK_IMPORTED_MODULE_4__["default"], {
    lsi: _bricks_editable_lsi_js__WEBPACK_IMPORTED_MODULE_5__["default"].line.verticalLabel
  }),
  onChange: ({
    value
  }) => {
    onChangeProps({
      vertical: value
    });
  }
}), Uu5g05.Utils.Element.create((uu5g04__WEBPACK_IMPORTED_MODULE_0___default().Forms.Number), {
  value: typeof componentProps.vertical === "number" ? componentProps.vertical : undefined,
  label: Uu5g05.Utils.Element.create(_lsi_js__WEBPACK_IMPORTED_MODULE_4__["default"], {
    lsi: _bricks_editable_lsi_js__WEBPACK_IMPORTED_MODULE_5__["default"].line.verticalHeightLabel
  }),
  disabled: !componentProps.vertical && typeof componentProps.vertical !== "number",
  valueType: "number",
  min: 1,
  suffix: "px",
  onChange: ({
    value
  }) => {
    onChangeProps({
      vertical: value
    });
  }
}));
const ContentInput = ({
  componentProps,
  onChangeProps
}) => {
  let usedContentProp = componentProps.content ? "content" : "children";
  return Uu5g05.Utils.Element.create((uu5g04__WEBPACK_IMPORTED_MODULE_0___default().Forms.Text), {
    value: componentProps[usedContentProp],
    onBlur: ({
      value
    }) => {
      onChangeProps({
        [usedContentProp]: value
      });
    },
    label: Uu5g05.Utils.Element.create(_lsi_js__WEBPACK_IMPORTED_MODULE_4__["default"], {
      lsi: _bricks_editable_lsi_js__WEBPACK_IMPORTED_MODULE_5__["default"].common.contentLabel
    })
  });
};
const TabsItemNameFix = (0,uu5g04__WEBPACK_IMPORTED_MODULE_0__.createComponent)({
  //@@viewOn:reactLifeCycle
  getInitialState() {
    let fixedItems = this.props.items.map(item => {
      var _item$props$name;
      return {
        ...item,
        props: {
          ...item.props,
          name: (_item$props$name = item.props.name) !== null && _item$props$name !== void 0 ? _item$props$name : uu5g04__WEBPACK_IMPORTED_MODULE_0___default().Common.Tools.generateUUID(8)
        }
      };
    });
    this.props.onChangeItems(fixedItems);
    return {};
  },
  //@@viewOff:reactLifeCycle

  //@@viewOn:render
  render() {
    return null;
  }
  //@@viewOff:render
});

/* harmony default export */ const __WEBPACK_DEFAULT_EXPORT__ = ({
  PresetEditComponent,
  ColWidthEditComponent,
  EditItemInfo,
  QRCodeSize,
  CardInline,
  ProgressBarStriped,
  ProgressBarItemStriped,
  LineVertical,
  ContentInput,
  TabsItemNameFix
});

/***/ }),

/***/ "./bricks/internal/row-editable.js":
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "Row": () => (/* binding */ Row),
/* harmony export */   "default": () => (__WEBPACK_DEFAULT_EXPORT__)
/* harmony export */ });
/* harmony import */ var _babel_runtime_helpers_extends__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__("../../node_modules/uu_appg01_devkit/node_modules/@babel/runtime/helpers/extends.js");
/* harmony import */ var _babel_runtime_helpers_extends__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(_babel_runtime_helpers_extends__WEBPACK_IMPORTED_MODULE_0__);
/* harmony import */ var uu5g04__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__("uu5g04");
/* harmony import */ var uu5g04__WEBPACK_IMPORTED_MODULE_1___default = /*#__PURE__*/__webpack_require__.n(uu5g04__WEBPACK_IMPORTED_MODULE_1__);
/* harmony import */ var _bricks_editable_ns_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__("./bricks/internal/bricks-editable-ns.js");
/* harmony import */ var _column_js__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__("./bricks/column.js");
/* harmony import */ var _footer_js__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__("./bricks/footer.js");
/* harmony import */ var _header_js__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__("./bricks/header.js");
/* harmony import */ var _lsi_js__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__("./bricks/lsi.js");
/* harmony import */ var _bricks_editable_lsi_js__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__("./bricks/internal/bricks-editable-lsi.js");
/* harmony import */ var _css_js__WEBPACK_IMPORTED_MODULE_8__ = __webpack_require__("./bricks/internal/css.js");
/* harmony import */ var _modal_editation_components_js__WEBPACK_IMPORTED_MODULE_9__ = __webpack_require__("./bricks/internal/modal-editation-components.js");

/**
 * Copyright (C) 2021 Unicorn a.s.
 *
 * This program is free software: you can redistribute it and/or modify it under the terms of the GNU General Public
 * License as published by the Free Software Foundation, either version 3 of the License, or (at your option) any later
 * version.
 *
 * This program is distributed in the hope that it will be useful, but WITHOUT ANY WARRANTY; without even the implied
 * warranty of MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the GNU General Public License at
 * <https://gnu.org/licenses/> for more details.
 *
 * You may obtain additional information at <https://unicorn.com> or contact Unicorn a.s. at address: V Kapslovne 2767/2,
 * Praha 3, Czech Republic or at the email: info@unicorn.com.
 */

//@@viewOn:imports









//@@viewOff:imports

const DEFAULT_PROPS_MAP = {
  contentEditable: false,
  noSpacing: false,
  level: null,
  underline: false,
  display: "standard",
  header: "",
  footer: "",
  content: null,
  children: null
};
const MAIN_CLASS_NAME = _bricks_editable_ns_js__WEBPACK_IMPORTED_MODULE_2__["default"].css("row");
const NAME = _bricks_editable_ns_js__WEBPACK_IMPORTED_MODULE_2__["default"].name("Row");
const propsSetup = [{
  name: Uu5g05.Utils.Element.create(_lsi_js__WEBPACK_IMPORTED_MODULE_6__["default"], {
    lsi: _bricks_editable_lsi_js__WEBPACK_IMPORTED_MODULE_7__["default"].row.mainPropertiesLabel
  }),
  setup: [_modal_editation_components_js__WEBPACK_IMPORTED_MODULE_9__.PresetEditComponent, {
    name: "display",
    type: "switchSelector",
    label: _bricks_editable_lsi_js__WEBPACK_IMPORTED_MODULE_7__["default"].row.displayLabel,
    getProps: () => ({
      items: [{
        value: "standard",
        content: Uu5g05.Utils.Element.create(_lsi_js__WEBPACK_IMPORTED_MODULE_6__["default"], {
          lsi: _bricks_editable_lsi_js__WEBPACK_IMPORTED_MODULE_7__["default"].row.displayValueStandard
        })
      }, {
        value: "flex",
        content: Uu5g05.Utils.Element.create(_lsi_js__WEBPACK_IMPORTED_MODULE_6__["default"], {
          lsi: _bricks_editable_lsi_js__WEBPACK_IMPORTED_MODULE_7__["default"].row.displayValueFlex
        })
      }]
    })
  }, {
    name: "noSpacing",
    type: "switchSelector",
    label: _bricks_editable_lsi_js__WEBPACK_IMPORTED_MODULE_7__["default"].row.horizontalPaddingLabel,
    getProps: () => ({
      items: [{
        value: false,
        content: Uu5g05.Utils.Element.create(_lsi_js__WEBPACK_IMPORTED_MODULE_6__["default"], {
          lsi: _bricks_editable_lsi_js__WEBPACK_IMPORTED_MODULE_7__["default"].row.horizontalPaddingValueStandard
        })
      }, {
        value: true,
        content: Uu5g05.Utils.Element.create(_lsi_js__WEBPACK_IMPORTED_MODULE_6__["default"], {
          lsi: _bricks_editable_lsi_js__WEBPACK_IMPORTED_MODULE_7__["default"].row.horizontalPaddingValueNone
        })
      }]
    })
  }, {
    name: "className",
    type: "text",
    label: Uu5g05.Utils.Element.create(_lsi_js__WEBPACK_IMPORTED_MODULE_6__["default"], {
      lsi: _bricks_editable_lsi_js__WEBPACK_IMPORTED_MODULE_7__["default"].row.classNameLabel
    })
  }]
}];
const editableItemPropsSetup = {
  setup: [_modal_editation_components_js__WEBPACK_IMPORTED_MODULE_9__.ColWidthEditComponent, {
    name: "noSpacing",
    type: "switchSelector",
    label: _bricks_editable_lsi_js__WEBPACK_IMPORTED_MODULE_7__["default"].row.horizontalPaddingLabel,
    getProps: () => ({
      items: [{
        value: false,
        content: Uu5g05.Utils.Element.create(_lsi_js__WEBPACK_IMPORTED_MODULE_6__["default"], {
          lsi: _bricks_editable_lsi_js__WEBPACK_IMPORTED_MODULE_7__["default"].row.horizontalPaddingValueStandard
        })
      }, {
        value: true,
        content: Uu5g05.Utils.Element.create(_lsi_js__WEBPACK_IMPORTED_MODULE_6__["default"], {
          lsi: _bricks_editable_lsi_js__WEBPACK_IMPORTED_MODULE_7__["default"].row.horizontalPaddingValueNone
        })
      }]
    })
  }, {
    name: "className",
    type: "text",
    label: Uu5g05.Utils.Element.create(_lsi_js__WEBPACK_IMPORTED_MODULE_6__["default"], {
      lsi: _bricks_editable_lsi_js__WEBPACK_IMPORTED_MODULE_7__["default"].row.classNameLabel
    })
  }]
};
const newEditableItem = {
  tagName: "UU5.Bricks.Column",
  isElement: true,
  props: {
    contentEditable: true
  }
};
function getEditableItemLabel(item, itemIndex) {
  return `Column ${itemIndex + 1}`;
}
const Row = uu5g04__WEBPACK_IMPORTED_MODULE_1__.Common.VisualComponent.create({
  //@@viewOn:mixins
  mixins: [uu5g04__WEBPACK_IMPORTED_MODULE_1__.Common.BaseMixin],
  //@@viewOff:mixins

  //@@viewOn:statics
  statics: {
    tagName: NAME,
    classNames: {
      main: MAIN_CLASS_NAME,
      checkbox: () => _css_js__WEBPACK_IMPORTED_MODULE_8__["default"].css(`
          cursor: pointer;
          margin-top: 0px;
          width: 100%;

          &.uu5-forms-checkbox {
            margin-bottom: 0px;
          }

          &:hover {
            background-color: #EEEEEE;
          }

          &:first-child {
            margin-top: 4px;
          }

          &:last-child {
            margin-bottom: 4px;
          }

          .uu5-forms-checkbox-button.uu5-forms-checkbox-button.uu5-forms-checkbox-button {
            border-color: transparent;
            background-color: transparent;
            outline: none;
          }

          label {
            cursor: pointer;
          }

          .uu5-forms-label {
            width: 80%;

            + .uu5-forms-input-wrapper {
              width: 20%;
            }
          }
        `)
    },
    lsi: () => ({
      ..._bricks_editable_lsi_js__WEBPACK_IMPORTED_MODULE_7__["default"].row,
      ..._bricks_editable_lsi_js__WEBPACK_IMPORTED_MODULE_7__["default"].common
    })
  },
  //@@viewOff:statics

  //@@viewOn:propTypes
  propTypes: {
    component: uu5g04__WEBPACK_IMPORTED_MODULE_1__.PropTypes.object.isRequired
  },
  //@@viewOff:propTypes

  //@@viewOn:getDefaultProps
  getDefaultProps() {
    return {
      component: null
    };
  },
  //@@viewOff:getDefaultProps

  //@@viewOn:reactLifeCycle
  getInitialState() {
    let editedProps = this.props.component.getEditablePropsValues(Object.keys(DEFAULT_PROPS_MAP));
    return {
      ...editedProps,
      showFooter: !!editedProps.footer,
      showHeader: !!editedProps.header,
      editModalOpen: false
    };
  },
  //@@viewOff:reactLifeCycle

  //@@viewOn:interface
  getPropsToSave() {
    return this._getPropsToSave();
  },
  //@@viewOff:interface

  //@@viewOn:overridingMethods
  //@@viewOff:overridingMethods

  //@@viewOn:private
  _onEndEditation() {
    this.props.component.endEditation(this._getPropsToSave());
  },
  _getPropsToSave(state = this.state) {
    // unused vars are here just to separate them from the result
    // eslint-disable-next-line no-unused-vars
    let {
      children,
      content,
      flex,
      editModalOpen,
      showHeader,
      showFooter,
      ...result
    } = state;
    for (let propName in DEFAULT_PROPS_MAP) {
      if (result[propName] !== undefined && result[propName] === DEFAULT_PROPS_MAP[propName]) {
        result[propName] = undefined;
      }
    }

    // remove header or footer if they are not showed
    if (!showHeader) {
      result.header = undefined;
    }
    if (!showFooter) {
      result.footer = undefined;
    }
    return result;
  },
  _onCloseEditationModal(newProps) {
    if (newProps) {
      let newState = {
        ...newProps
      };
      delete newState.children;
      delete newState.content;
      this.setState({
        ...newState,
        editModalOpen: false
      }, () => this.props.component.saveEditation(newProps));
    } else {
      this.setState({
        editModalOpen: false
      });
    }
  },
  _openEditModal() {
    this.setState({
      editModalOpen: true
    });
  },
  _closeEditModal() {
    this.setState({
      editModalOpen: false
    });
  },
  _toggleHeader() {
    this.setState(state => ({
      showHeader: !state.showHeader
    }));
  },
  _toggleFooter() {
    this.setState(state => ({
      showFooter: !state.showFooter
    }));
  },
  _toggleUnderline() {
    this.setState(state => ({
      underline: !state.underline
    }));
  },
  _toggleDisplay() {
    this.setState(state => ({
      display: state.display === "flex" ? "standard" : "flex"
    }), () => {
      this.props.component.saveEditation({
        display: this.state.display
      });
    });
  },
  _changeLevel(value) {
    this.setState({
      level: value
    });
  },
  _changeHeaderContent(opt) {
    this.setState({
      header: opt.value
    });
  },
  _changeFooterContent(opt) {
    this.setState({
      footer: opt.value
    });
  },
  _getHeaderToolbarItems() {
    let levelItems = [1, 2, 3, 4, 5, 6].map(level => ({
      content: `${this.getLsiValue("level")} ${level}`,
      value: `${level}`
    }));
    levelItems.unshift({
      content: this.getLsiComponent("defaultLevel"),
      value: null
    });
    return [{
      type: "separator"
    }, {
      type: "button",
      props: () => {
        return {
          pressed: this.state.underline,
          onClick: this._toggleUnderline,
          tooltip: this.getLsiValue("underlineTooltip"),
          icon: "mdi-format-underline"
        };
      }
    }, {
      type: "dropdown",
      props: () => {
        let label = this.state.level ? `${this.getLsiValue("level")} ${this.state.level}` : `${this.getLsiValue("defaultLevel")}`;
        return {
          value: this.state.level,
          label,
          tooltip: this.getLsiValue("levelTooltip"),
          items: levelItems,
          onClick: this._changeLevel
        };
      }
    }];
  },
  _getToolbarItems() {
    return [{
      type: "button",
      props: () => {
        return {
          pressed: this.state.editModalOpen,
          icon: "mdi-view-column",
          onClick: this._openEditModal,
          tooltip: this.getLsiValue("layoutTooltip")
        };
      }
    }];
  },
  _getToolbarSettings() {
    return [{
      value: this.state.showHeader,
      onClick: this._toggleHeader,
      label: this.getLsiComponent("showHeaderCheckboxLabel")
    }, {
      value: this.state.showFooter,
      onClick: this._toggleFooter,
      label: this.getLsiComponent("showFooterCheckboxLabel")
    }, {
      value: this.state.display === "flex",
      onClick: this._toggleDisplay,
      label: this.getLsiComponent("flexCheckboxLabel")
    }];
  },
  _renderEditModal() {
    return Uu5g05.Utils.Element.create(uu5g04__WEBPACK_IMPORTED_MODULE_1__.Common.Suspense, {
      fallback: ""
    }, Uu5g05.Utils.Element.create(uu5g04__WEBPACK_IMPORTED_MODULE_1__.BricksEditable.Modal, {
      shown: true,
      onClose: this._onCloseEditationModal,
      componentName: this.props.component.getTagName(),
      componentProps: this.props.component.getEditablePropsValues(Object.keys(this.props.component.props)),
      componentPropsForm: propsSetup,
      itemName: _column_js__WEBPACK_IMPORTED_MODULE_3__["default"].tagName,
      itemDefaultProps: _column_js__WEBPACK_IMPORTED_MODULE_3__["default"].defaultProps,
      itemPropsForm: editableItemPropsSetup,
      newItem: newEditableItem,
      getItemLabel: getEditableItemLabel
    }));
  },
  //@@viewOff:private

  //@@viewOn:render
  render() {
    return Uu5g05.Utils.Element.create(Uu5g05.Fragment, null, Uu5g05.Utils.Element.create(uu5g04__WEBPACK_IMPORTED_MODULE_1__.BricksEditable.Toolbar, _babel_runtime_helpers_extends__WEBPACK_IMPORTED_MODULE_0___default()({}, this.getMainPropsToPass(), {
      onClose: this._onEndEditation,
      items: this._getToolbarItems(),
      settingsItems: this._getToolbarSettings()
    }), [this.state.showHeader ? Uu5g05.Utils.Element.create(uu5g04__WEBPACK_IMPORTED_MODULE_1__.BricksEditable.Input, {
      value: this.state.header || "",
      placeholder: this.getLsi("headerPlaceholder"),
      onChange: this._changeHeaderContent,
      toolbarItems: this._getHeaderToolbarItems(),
      key: "headerInput"
    }, ({
      children
    }) => Uu5g05.Utils.Element.create(_header_js__WEBPACK_IMPORTED_MODULE_5__["default"], {
      underline: this.state.underline,
      level: this.state.level,
      parent: this.props.component
    }, children)) : null, this.props.component.getChildren(), this.state.showFooter ? Uu5g05.Utils.Element.create(uu5g04__WEBPACK_IMPORTED_MODULE_1__.BricksEditable.Input, {
      value: this.state.footer || "",
      placeholder: this.getLsi("footerPlaceholder"),
      onChange: this._changeFooterContent,
      key: "footerInput"
    }, ({
      children
    }) => Uu5g05.Utils.Element.create(_footer_js__WEBPACK_IMPORTED_MODULE_4__["default"], {
      parent: this.props.component
    }, children)) : null]), this.state.editModalOpen ? this._renderEditModal() : null);
  }
  //@@viewOff:render
});

/* harmony default export */ const __WEBPACK_DEFAULT_EXPORT__ = (Row);

/***/ })

}]);