/*!
 * uu5g04 library with basic visual components
 * Copyright (C) 2021 Unicorn a.s.
 * 
 * This program is free software: you can redistribute it and/or modify
 * it under the terms of the GNU General Public License as published by
 * the Free Software Foundation, either version 3 of the License, or
 * (at your option) any later version.
 * 
 * This program is distributed in the hope that it will be useful,
 * but WITHOUT ANY WARRANTY; without even the implied warranty of
 * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the
 * GNU General Public License for more details.
 * 
 * You should have received a copy of the GNU General Public License
 * along with this program. If not, see Licenses - GNU Project <https://gnu.org/licenses/>.
 */
"use strict";
(this["__webpack_jsonp_uu5g04_1_58_8_uu5g04_bricks"] = this["__webpack_jsonp_uu5g04_1_58_8_uu5g04_bricks"] || []).push([["bricks_internal_screen-size-editable_js"],{

/***/ "./bricks/internal/screen-size-editable.js":
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "ScreenSizeEditable": () => (/* binding */ ScreenSizeEditable),
/* harmony export */   "default": () => (__WEBPACK_DEFAULT_EXPORT__)
/* harmony export */ });
/* harmony import */ var _babel_runtime_helpers_extends__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__("../../node_modules/uu_appg01_devkit/node_modules/@babel/runtime/helpers/extends.js");
/* harmony import */ var _babel_runtime_helpers_extends__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(_babel_runtime_helpers_extends__WEBPACK_IMPORTED_MODULE_0__);
/* harmony import */ var uu5g04__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__("uu5g04");
/* harmony import */ var uu5g04__WEBPACK_IMPORTED_MODULE_1___default = /*#__PURE__*/__webpack_require__.n(uu5g04__WEBPACK_IMPORTED_MODULE_1__);
/* harmony import */ var _bricks_editable_ns_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__("./bricks/internal/bricks-editable-ns.js");
/* harmony import */ var _css_js__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__("./bricks/internal/css.js");
/* harmony import */ var _bricks_editable_lsi_js__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__("./bricks/internal/bricks-editable-lsi.js");

let _ = t => t,
  _t,
  _t2,
  _t3;
/**
 * Copyright (C) 2021 Unicorn a.s.
 *
 * This program is free software: you can redistribute it and/or modify it under the terms of the GNU General Public
 * License as published by the Free Software Foundation, either version 3 of the License, or (at your option) any later
 * version.
 *
 * This program is distributed in the hope that it will be useful, but WITHOUT ANY WARRANTY; without even the implied
 * warranty of MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the GNU General Public License at
 * <https://gnu.org/licenses/> for more details.
 *
 * You may obtain additional information at <https://unicorn.com> or contact Unicorn a.s. at address: V Kapslovne 2767/2,
 * Praha 3, Czech Republic or at the email: info@unicorn.com.
 */

//@@viewOn:imports




//@@viewOff:imports

const Lsi = _bricks_editable_lsi_js__WEBPACK_IMPORTED_MODULE_4__["default"].screenSize;
const sizesStates = ["xs", "s", "m", "l", "xl"];
const DEFAULT_PROPS_MAP = {
  children: undefined
};
const MAIN_CLASS_NAME = _bricks_editable_ns_js__WEBPACK_IMPORTED_MODULE_2__["default"].css("screen-size-editable");
const NAME = _bricks_editable_ns_js__WEBPACK_IMPORTED_MODULE_2__["default"].name("ScreenSizeEditable");
const newEditableItem = {
  tagName: "UU5.Bricks.ScreenSize.Item",
  isElement: true,
  props: {
    screenSize: "m"
  }
};
let itemEditation = [{
  name: "screenSize",
  type: "tagSelect",
  label: Uu5g05.Utils.Element.create(uu5g04__WEBPACK_IMPORTED_MODULE_1__.Bricks.Lsi, {
    lsi: Lsi.sizes
  }),
  getProps: props => {
    return {
      availableTags: [...sizesStates.map(size => ({
        value: size
      })), {
        content: Lsi.otherLabel,
        value: "*"
      }],
      multiple: true,
      required: true,
      message: Uu5g05.Utils.Element.create(uu5g04__WEBPACK_IMPORTED_MODULE_1__.Bricks.Lsi, {
        lsi: Lsi.sameScreenSizeInfo
      }),
      onChange: opt => {
        var _value;
        let value = opt.value;
        if (Array.isArray(value)) {
          let starIndex = value.indexOf("*");
          if (starIndex > -1 && value.length > starIndex + 1) {
            value = [...value];
            value.splice(starIndex, 1);
          } else if (starIndex > -1) {
            value = "*";
          }
        }
        props.onChange({
          ...opt,
          value: ((_value = value) === null || _value === void 0 ? void 0 : _value.length) > 1 ? value : value[0]
        });
      }
    };
  }
}];
const editableItemPropsSetup = {
  setup: itemEditation,
  info: Uu5g05.Utils.Element.create(uu5g04__WEBPACK_IMPORTED_MODULE_1__.Common.Fragment, null, Uu5g05.Utils.Element.create(uu5g04__WEBPACK_IMPORTED_MODULE_1__.Bricks.Lsi, {
    lsi: Lsi.componentInfo
  }), " ", Uu5g05.Utils.Element.create(uu5g04__WEBPACK_IMPORTED_MODULE_1__.Common.Help, {
    tagName: "UU5.Bricks.ScreenSize"
  }))
};
const CLASS_NAMES = {
  flexContainer: () => {
    return _css_js__WEBPACK_IMPORTED_MODULE_3__["default"].css(_t || (_t = _`
      display: flex;
    `));
  },
  sideColumns: () => {
    return _css_js__WEBPACK_IMPORTED_MODULE_3__["default"].css(_t2 || (_t2 = _`
      flex: 1 0 auto;
      background-color: #C1C1C1;
    `));
  },
  centreColumn: sizeToUse => {
    let style = sizeToUse === "xl" ? `flex-basis: 100%;` : `
      width: ${sizeToUse};
      max-width: 100%;
    `;
    return _css_js__WEBPACK_IMPORTED_MODULE_3__["default"].css(_t3 || (_t3 = _`
        ${0};
    `), style);
  }
};
const ScreenSizeEditable = uu5g04__WEBPACK_IMPORTED_MODULE_1__.Common.VisualComponent.create({
  //@@viewOn:mixins
  mixins: [uu5g04__WEBPACK_IMPORTED_MODULE_1__.Common.BaseMixin, uu5g04__WEBPACK_IMPORTED_MODULE_1__.Common.ContentMixin],
  //@@viewOff:mixins

  //@@viewOn:statics
  statics: {
    tagName: NAME,
    classNames: {
      main: MAIN_CLASS_NAME
    },
    lsi: () => Lsi
  },
  //@@viewOff:statics

  //@@viewOn:propTypes
  propTypes: {
    component: uu5g04__WEBPACK_IMPORTED_MODULE_1__.PropTypes.object.isRequired,
    editMode: uu5g04__WEBPACK_IMPORTED_MODULE_1__.PropTypes.object
  },
  //@@viewOff:propTypes

  //@@viewOn:getDefaultProps
  getDefaultProps() {
    return {
      component: null
    };
  },
  //@@viewOff:getDefaultProps

  //@@viewOn:reactLifeCycle
  getInitialState() {
    return {
      ...this._getState(this.props),
      activeItemIndex: 0,
      editationModalOpen: false
    };
  },
  componentWillReceiveProps(nextProps) {
    this.setState({
      ...this._getState(nextProps)
    });
  },
  //@@viewOff:reactLifeCycle

  //@@viewOn:interface
  getPropsToSave() {
    return this.state.editationModalOpen ? this._modal.getPropsToSave() : {};
  },
  //@@viewOff:interface

  //@@viewOn:overridingMethods
  //@@viewOff:overridingMethods

  //@@viewOn:private
  _getState(props) {
    let state = {
      ...props.component.getEditablePropsValues(Object.keys(this.props.component.props))
    };
    let allChildren = props.component.getChildren();
    if (!Array.isArray(allChildren) && allChildren) {
      allChildren = [allChildren];
    }
    if (Array.isArray(allChildren)) {
      var _this$props$component;
      let childTagName = (_this$props$component = this.props.component.getDefault()) === null || _this$props$component === void 0 ? void 0 : _this$props$component.childTagName;
      allChildren = allChildren.filter(child => uu5g04__WEBPACK_IMPORTED_MODULE_1__.Common.Element.isValid(child) && child.type.tagName === childTagName);
      if (allChildren.length === 0) {
        allChildren = null;
      }
    }
    state.children = allChildren;
    return state;
  },
  _onSettingsClick() {
    //EditationModal will use the content/children value of the component, but it's children can be already in edit mode, so their actual values can be lost, so endChildrenEditation and make sure that data are correct.
    this.props.component.endChildrenEditation();
    this.setState(state => ({
      editationModalOpen: !state.editationModalOpen
    }));
  },
  _registerEditToolbar(toolbar) {
    this._editToolbar = toolbar;
  },
  _registerDiv(div) {
    this._div = div;
  },
  // props actions
  _onEndEditation() {
    this.props.component.endEditation();
  },
  _onChangeRenderedItem({
    value
  }) {
    //EditationModal will use the content/children value of the component, but it's children can be already in edit mode, so their actual values can be lost, so endChildrenEditation and make sure that data are correct.
    this.props.component.endChildrenEditation();
    this.setState({
      activeItemIndex: value
    });
  },
  _getPropsToSave(propsToSave) {
    if (propsToSave === undefined) propsToSave = {
      ...this.state
    };
    for (let propName in DEFAULT_PROPS_MAP) {
      if (propsToSave[propName] !== undefined && propsToSave[propName] === DEFAULT_PROPS_MAP[propName]) {
        propsToSave[propName] = undefined;
      }
    }
    return propsToSave;
  },
  _getSwitchSelectorLabels(screenSize) {
    if (typeof screenSize === "string") {
      return screenSize === "*" ? Uu5g05.Utils.Element.create(uu5g04__WEBPACK_IMPORTED_MODULE_1__.Bricks.Lsi, {
        lsi: Lsi.otherLabel
      }) : screenSize;
    }
    return screenSize.map((item, index) => {
      return screenSize.length === index + 1 ? `${item}` : `${item}, `;
    });
  },
  _getToolbarItems(allChildren) {
    if (Array.isArray(allChildren)) {
      return [Uu5g05.Utils.Element.create(uu5g04__WEBPACK_IMPORTED_MODULE_1__.Bricks.SwitchSelector, {
        items: (allChildren || []).map((item, index) => ({
          value: index,
          content: this._getSwitchSelectorLabels(item.props.screenSize),
          bgStyle: this.state.activeItemIndex === index ? "underline" : undefined,
          colorSchema: "primary"
        })),
        onChange: this._onChangeRenderedItem,
        value: this.state.activeItemIndex,
        key: "switchSelector",
        bgStyle: "transparent",
        colorSchema: "custom",
        size: "l"
      })];
    } else {
      return null;
    }
  },
  _sizeToUse(screenSize) {
    for (let i = sizesStates.length - 1; i >= 0; i--) {
      let heighestSize = screenSize.find(size => size === sizesStates[i]);
      if (heighestSize) {
        return heighestSize;
      }
    }
  },
  _renderItem(allChildren) {
    if (Array.isArray(allChildren) && allChildren[this.state.activeItemIndex]) {
      let sizeToUse;
      if (typeof allChildren[this.state.activeItemIndex].props.screenSize === "string") {
        sizeToUse = allChildren[this.state.activeItemIndex].props.screenSize === "*" ? "*" : uu5g04__WEBPACK_IMPORTED_MODULE_1__.Utils.ScreenSize.SIZE_MAP[allChildren[this.state.activeItemIndex].props.screenSize];
      } else {
        let heighestSize = this._sizeToUse(allChildren[this.state.activeItemIndex].props.screenSize);
        if (heighestSize) {
          sizeToUse = uu5g04__WEBPACK_IMPORTED_MODULE_1__.Utils.ScreenSize.SIZE_MAP[heighestSize];
        }
      }
      sizeToUse = sizeToUse === Infinity || sizeToUse === "*" ? "xl" : `${sizeToUse}px`;
      return uu5g04__WEBPACK_IMPORTED_MODULE_1__.Common.Element.clone(allChildren[this.state.activeItemIndex], {
        className: CLASS_NAMES.centreColumn(sizeToUse)
      });
    } else {
      return null;
    }
  },
  _getAllItems(allChildren) {
    if (Array.isArray(allChildren)) {
      let allChildrenWithEditItems = allChildren.map(child => {
        return child;
      });
      return allChildrenWithEditItems;
    } else {
      return null;
    }
  },
  _getItemLabel(item, itemIndex) {
    let label = "";
    if (item.props && item.props.screenSize) {
      label = `${item.props.screenSize}`;
    } else if (item.screenSize) {
      label = `${item === null || item === void 0 ? void 0 : item.screenSize}`;
    } else {
      label = this.getLsiComponent("itemLabel", undefined, {
        itemNumber: itemIndex + 1
      });
    }
    if (label === "*") {
      label = Uu5g05.Utils.Element.create(uu5g04__WEBPACK_IMPORTED_MODULE_1__.Bricks.Lsi, {
        lsi: Lsi.otherLabel
      });
    }
    return label;
  },
  _renderMoreSettingsModal() {
    let componentProps = this.props.component.getEditablePropsValues(Object.keys(this.props.component.props));
    componentProps.info = "";
    return this.state.editationModalOpen ? Uu5g05.Utils.Element.create(uu5g04__WEBPACK_IMPORTED_MODULE_1__.Common.Suspense, {
      fallback: ""
    }, Uu5g05.Utils.Element.create(uu5g04__WEBPACK_IMPORTED_MODULE_1__.BricksEditable.Modal, {
      shown: true,
      componentName: this.props.component.getTagName(),
      componentProps: componentProps,
      header: _bricks_editable_lsi_js__WEBPACK_IMPORTED_MODULE_4__["default"].screenSize.name,
      onClose: this._onCloseEditationModal,
      itemName: uu5g04__WEBPACK_IMPORTED_MODULE_1__.Bricks.ScreenSize.Item.tagName,
      itemDefaultProps: uu5g04__WEBPACK_IMPORTED_MODULE_1__.Bricks.ScreenSize.Item.defaultProps,
      itemPropsForm: editableItemPropsSetup,
      itemsSource: "children",
      newItem: newEditableItem,
      ref_: modal => this._modal = modal,
      getItemLabel: this._getItemLabel
    })) : null;
  },
  _onCloseEditationModal(newProps) {
    if (newProps) {
      this.setState({
        editationModalOpen: false,
        children: uu5g04__WEBPACK_IMPORTED_MODULE_1__.Common.UU5String.toChildren(newProps.children)
      }, () => {
        this.props.component.saveEditation(newProps);
      });
    } else {
      this.setState({
        editationModalOpen: false
      });
    }
  },
  //@@viewOff:private

  //@@viewOn:render
  render() {
    let allChildren = this.state.children;
    if (!Array.isArray(allChildren) && allChildren) {
      allChildren = [allChildren];
    }
    if (Array.isArray(allChildren)) {
      var _this$props$component2;
      let childTagName = (_this$props$component2 = this.props.component.getDefault()) === null || _this$props$component2 === void 0 ? void 0 : _this$props$component2.childTagName;
      allChildren = allChildren.filter(child => uu5g04__WEBPACK_IMPORTED_MODULE_1__.Common.Element.isValid(child) && child.type.tagName === childTagName);
      if (allChildren.length === 0) {
        allChildren = null;
      }
    }
    return this.props.editMode && !this.props.editMode.edit ? Uu5g05.Utils.Element.create(Uu5g05.Fragment, null, this._getToolbarItems(this.state.children), Uu5g05.Utils.Element.create("span", {
      className: CLASS_NAMES.sideColumns()
    }), this._renderItem(this.state.children), Uu5g05.Utils.Element.create("span", {
      className: CLASS_NAMES.sideColumns()
    })) : Uu5g05.Utils.Element.create(Uu5g05.Fragment, null, Uu5g05.Utils.Element.create(uu5g04__WEBPACK_IMPORTED_MODULE_1__.BricksEditable.Toolbar, _babel_runtime_helpers_extends__WEBPACK_IMPORTED_MODULE_0___default()({}, this.getMainPropsToPass(), {
      ref_: this._registerEditToolbar,
      items: this._getToolbarItems(this.state.children),
      onMoreSettingsClick: this._onSettingsClick,
      onClose: this._onEndEditation
    }), Uu5g05.Utils.Element.create(uu5g04__WEBPACK_IMPORTED_MODULE_1__.Bricks.Div, {
      className: CLASS_NAMES.flexContainer(),
      ref_: this._registerDiv
    }, Uu5g05.Utils.Element.create("span", {
      className: CLASS_NAMES.sideColumns()
    }), this._renderItem(this.state.children), Uu5g05.Utils.Element.create("span", {
      className: CLASS_NAMES.sideColumns()
    }))), this._renderMoreSettingsModal());
  }
  //@@viewOff:render
});

/* harmony default export */ const __WEBPACK_DEFAULT_EXPORT__ = (ScreenSizeEditable);

/***/ })

}]);