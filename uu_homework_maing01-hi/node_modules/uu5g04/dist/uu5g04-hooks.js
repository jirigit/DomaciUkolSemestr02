/*!
 * uu5g04 library with basic visual components
 * Copyright (C) 2021 Unicorn a.s.
 * 
 * This program is free software: you can redistribute it and/or modify
 * it under the terms of the GNU General Public License as published by
 * the Free Software Foundation, either version 3 of the License, or
 * (at your option) any later version.
 * 
 * This program is distributed in the hope that it will be useful,
 * but WITHOUT ANY WARRANTY; without even the implied warranty of
 * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the
 * GNU General Public License for more details.
 * 
 * You should have received a copy of the GNU General Public License
 * along with this program. If not, see Licenses - GNU Project <https://gnu.org/licenses/>.
 */
if (typeof Uu5Loader !== "undefined" && Uu5Loader || typeof SystemJS !== "undefined" && SystemJS) {
  (function() {
    // try to auto-configure Uu5Loader loader regarding "uu5g05" in case that application
    // was deployed with older version of uu5g04 (which didn't depend on uu5g05 yet)
    // using Uu5Loader or SystemJS
    var doConfig, resolve;
    if (typeof Uu5Loader !== "undefined" && Uu5Loader) {
      doConfig = function (imports) { Uu5Loader.config({ imports: imports }); };
      resolve = Uu5Loader.resolve;
    } else {
      doConfig = function (imports) { SystemJS.config({ paths: imports }); };
      resolve = function (name) {
        var result = SystemJS.normalizeSync(name);
        return result.slice(-name.length - 1) === "/" + name ? null : result;
      };
    }
    var uu5g05Uri = resolve("uu5g05");
    if (!uu5g05Uri) {
      var myUri = resolve("uu5g04");
      if (myUri) {
        var minSuffix = myUri.match(/\.min\.js(\?|$)/) ? ".min" : "";
        if (!uu5g05Uri) {
          var env = typeof uu5Environment !== "undefined" ? uu5Environment || {} : typeof UU5 !== "undefined" ? (UU5.Environment || {}) : {};
          var cdnBaseUri = (env.cdnBaseUri || "https://cdn.plus4u.net").replace(/\/*$/, "");
          doConfig({
            "uu5g05": cdnBaseUri + "/uu-uu5g05/1.0.0/uu5g05" + minSuffix + ".js"
          });
          var uu5stringg01Uri = resolve("uu5stringg01");
          if (!uu5stringg01Uri) {
            doConfig({
              "uu5stringg01": cdnBaseUri + "/uu-uu5stringg01/1.0.0/uu5stringg01" + minSuffix + ".js"
            });
          }
        }
      }
    }
  })();
}
(function webpackUniversalModuleDefinition(root, factory) {
	if(typeof exports === 'object' && typeof module === 'object')
		module.exports = factory(require("module"), require("uu5g04"), require("uu5g05"));
	else if(typeof define === 'function' && define.amd)
		define("uu5g04-hooks", ["module", "uu5g04", "uu5g05"], factory);
	else if(typeof exports === 'object')
		exports["uu5g04-hooks"] = factory(require("module"), require("uu5g04"), require("uu5g05"));
	else
		root["UU5"] = root["UU5"] || {}, root["UU5"]["Hooks"] = factory(root["undefined"], root["UU5"], root["Uu5"]);
})(this, (__WEBPACK_EXTERNAL_MODULE_module__, __WEBPACK_EXTERNAL_MODULE_uu5g04__, __WEBPACK_EXTERNAL_MODULE_uu5g05__) => {
return /******/ (() => { // webpackBootstrap
/******/ 	var __webpack_modules__ = ({

/***/ "./hooks/create-visual-component-with-ref.js":
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "createVisualComponentWithRef": () => (/* binding */ g04CreateVisualComponentWithRef),
/* harmony export */   "default": () => (__WEBPACK_DEFAULT_EXPORT__)
/* harmony export */ });
/* harmony import */ var _create_visual_component_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__("./hooks/create-visual-component.js");

function g04CreateVisualComponentWithRef(component) {
  return (0,_create_visual_component_js__WEBPACK_IMPORTED_MODULE_0__["default"])(component, true);
}

/* harmony default export */ const __WEBPACK_DEFAULT_EXPORT__ = (g04CreateVisualComponentWithRef);

/***/ }),

/***/ "./hooks/create-visual-component.js":
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "createVisualComponent": () => (/* binding */ g04CreateVisualComponent),
/* harmony export */   "default": () => (__WEBPACK_DEFAULT_EXPORT__)
/* harmony export */ });
/* harmony import */ var uu5g05__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__("uu5g05");
/* harmony import */ var uu5g05__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(uu5g05__WEBPACK_IMPORTED_MODULE_0__);

function g04CreateVisualComponent(component, isRef) {
  return (0,uu5g05__WEBPACK_IMPORTED_MODULE_0__.createVisualComponent)(component, isRef, {
    skipColorSchemaCheck: true,
    skipNestingLevelDeprecationCheck: true
  });
}

/* harmony default export */ const __WEBPACK_DEFAULT_EXPORT__ = (g04CreateVisualComponent);

/***/ }),

/***/ "./hooks/hooks-build.js":
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "default": () => (__WEBPACK_DEFAULT_EXPORT__)
/* harmony export */ });
/* harmony import */ var _hooks_startup_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__("./hooks/hooks-startup.js");
/* harmony import */ var _hooks_startup_js__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(_hooks_startup_js__WEBPACK_IMPORTED_MODULE_0__);
/* harmony import */ var _hooks_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__("./hooks/hooks.js");
/* harmony import */ var _hooks_js__WEBPACK_IMPORTED_MODULE_1___default = /*#__PURE__*/__webpack_require__.n(_hooks_js__WEBPACK_IMPORTED_MODULE_1__);
/* harmony reexport (unknown) */ var __WEBPACK_REEXPORT_OBJECT__ = {};
/* harmony reexport (unknown) */ for(const __WEBPACK_IMPORT_KEY__ in _hooks_js__WEBPACK_IMPORTED_MODULE_1__) if(__WEBPACK_IMPORT_KEY__ !== "default") __WEBPACK_REEXPORT_OBJECT__[__WEBPACK_IMPORT_KEY__] = () => _hooks_js__WEBPACK_IMPORTED_MODULE_1__[__WEBPACK_IMPORT_KEY__]
/* harmony reexport (unknown) */ __webpack_require__.d(__webpack_exports__, __WEBPACK_REEXPORT_OBJECT__);
/**
 * Copyright (C) 2021 Unicorn a.s.
 *
 * This program is free software: you can redistribute it and/or modify it under the terms of the GNU General Public
 * License as published by the Free Software Foundation, either version 3 of the License, or (at your option) any later
 * version.
 *
 * This program is distributed in the hope that it will be useful, but WITHOUT ANY WARRANTY; without even the implied
 * warranty of MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the GNU General Public License at
 * <https://gnu.org/licenses/> for more details.
 *
 * You may obtain additional information at <https://unicorn.com> or contact Unicorn a.s. at address: V Kapslovne 2767/2,
 * Praha 3, Czech Republic or at the email: info@unicorn.com.
 */




/* harmony default export */ const __WEBPACK_DEFAULT_EXPORT__ = (_hooks_js__WEBPACK_IMPORTED_MODULE_1__);

/***/ }),

/***/ "./hooks/hooks-extra-exports.js":
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "SessionProvider": () => (/* binding */ SessionProvider)
/* harmony export */ });
/* harmony import */ var uu5g04__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__("uu5g04");
/* harmony import */ var uu5g04__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(uu5g04__WEBPACK_IMPORTED_MODULE_0__);
/**
 * Copyright (C) 2021 Unicorn a.s.
 *
 * This program is free software: you can redistribute it and/or modify it under the terms of the GNU General Public
 * License as published by the Free Software Foundation, either version 3 of the License, or (at your option) any later
 * version.
 *
 * This program is distributed in the hope that it will be useful, but WITHOUT ANY WARRANTY; without even the implied
 * warranty of MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the GNU General Public License at
 * <https://gnu.org/licenses/> for more details.
 *
 * You may obtain additional information at <https://unicorn.com> or contact Unicorn a.s. at address: V Kapslovne 2767/2,
 * Praha 3, Czech Republic or at the email: info@unicorn.com.
 */

const {
  _Provider: SessionProvider
} = (uu5g04__WEBPACK_IMPORTED_MODULE_0___default().Common.Session);


/***/ }),

/***/ "./hooks/hooks-startup.js":
/***/ ((__unused_webpack_module, __unused_webpack_exports, __webpack_require__) => {

/**
 * Copyright (C) 2021 Unicorn a.s.
 *
 * This program is free software: you can redistribute it and/or modify it under the terms of the GNU General Public
 * License as published by the Free Software Foundation, either version 3 of the License, or (at your option) any later
 * version.
 *
 * This program is distributed in the hope that it will be useful, but WITHOUT ANY WARRANTY; without even the implied
 * warranty of MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the GNU General Public License at
 * <https://gnu.org/licenses/> for more details.
 *
 * You may obtain additional information at <https://unicorn.com> or contact Unicorn a.s. at address: V Kapslovne 2767/2,
 * Praha 3, Czech Republic or at the email: info@unicorn.com.
 */

// TODO Remove polyfill when browsers are ready.
if (!window.ResizeObserver) {
  window.ResizeObserver = __webpack_require__("../../node_modules/resize-observer-polyfill/dist/ResizeObserver.es.js");
  if (typeof window.ResizeObserver !== "function") window.ResizeObserver = window.ResizeObserver.default;
}

/***/ }),

/***/ "./hooks/hooks.js":
/***/ ((module, __unused_webpack_exports, __webpack_require__) => {

module.exports = {
  get "SessionProvider"() {
    return (__webpack_require__("./hooks/hooks-extra-exports.js").SessionProvider);
  },
  get "useCallback"() {
    return (__webpack_require__("uu5g05").useCallback);
  },
  get "useContext"() {
    return (__webpack_require__("uu5g05").useContext);
  },
  get "useEffect"() {
    return (__webpack_require__("uu5g05").useEffect);
  },
  get "useImperativeHandle"() {
    return (__webpack_require__("uu5g05").useImperativeHandle);
  },
  get "useDebugValue"() {
    return (__webpack_require__("uu5g05").useDebugValue);
  },
  get "useLayoutEffect"() {
    return (__webpack_require__("uu5g05").useLayoutEffect);
  },
  get "useMemo"() {
    return (__webpack_require__("uu5g05").useMemo);
  },
  get "useReducer"() {
    return (__webpack_require__("uu5g05").useReducer);
  },
  get "useRef"() {
    return (__webpack_require__("uu5g05").useRef);
  },
  get "useState"() {
    return (__webpack_require__("uu5g05").useState);
  },
  get "createComponent"() {
    return (__webpack_require__("uu5g05").createComponent);
  },
  get "createComponentWithRef"() {
    return (__webpack_require__("uu5g05").createComponentWithRef);
  },
  get "createHoc"() {
    return (__webpack_require__("uu5g05").createHoc);
  },
  get "createVisualComponent"() {
    return (__webpack_require__("./hooks/create-visual-component.js").createVisualComponent);
  },
  get "createVisualComponentWithRef"() {
    return (__webpack_require__("./hooks/create-visual-component-with-ref.js").createVisualComponentWithRef);
  },
  get "useCall"() {
    return (__webpack_require__("./hooks/use-call.js").useCall);
  },
  get "useLanguage"() {
    return (__webpack_require__("./hooks/use-language.js").useLanguage);
  },
  get "LanguageProvider"() {
    return (__webpack_require__("./hooks/use-language.js").LanguageProvider);
  },
  get "useLevel"() {
    return (__webpack_require__("./hooks/use-level.js").useLevel);
  },
  get "LevelProvider"() {
    return (__webpack_require__("./hooks/use-level.js").LevelProvider);
  },
  get "useScreenSize"() {
    return (__webpack_require__("./hooks/use-screen-size.js").useScreenSize);
  },
  get "ScreenSizeProvider"() {
    return (__webpack_require__("./hooks/use-screen-size.js").ScreenSizeProvider);
  },
  get "useSession"() {
    return (__webpack_require__("./hooks/use-session.js").useSession);
  },
  get "useTimeZone"() {
    return (__webpack_require__("./hooks/use-time-zone.js").useTimeZone);
  },
  get "TimeZoneProvider"() {
    return (__webpack_require__("./hooks/use-time-zone.js").TimeZoneProvider);
  },
  get "useUserPreferences"() {
    return (__webpack_require__("./hooks/use-user-preferences.js").useUserPreferences);
  },
  get "UserPreferencesProvider"() {
    return (__webpack_require__("./hooks/use-user-preferences.js").UserPreferencesProvider);
  },
  get "useDataController"() {
    return (__webpack_require__("uu5g05").useDataController);
  },
  get "DataControllerProvider"() {
    return (__webpack_require__("uu5g05").DataControllerProvider);
  },
  get "useDataFilter"() {
    return (__webpack_require__("uu5g05").useDataFilter);
  },
  get "useDataSelection"() {
    return (__webpack_require__("uu5g05").useDataSelection);
  },
  get "useDataSorter"() {
    return (__webpack_require__("uu5g05").useDataSorter);
  },
  get "useDataStore"() {
    return (__webpack_require__("uu5g05").useDataStore);
  },
  get "DataStoreProvider"() {
    return (__webpack_require__("uu5g05").DataStoreProvider);
  },
  get "useDevice"() {
    return (__webpack_require__("uu5g05").useDevice);
  },
  get "DeviceProvider"() {
    return (__webpack_require__("uu5g05").DeviceProvider);
  },
  get "useElementSize"() {
    return (__webpack_require__("uu5g05").useElementSize);
  },
  get "useEvent"() {
    return (__webpack_require__("uu5g05").useEvent);
  },
  get "useLsi"() {
    return (__webpack_require__("uu5g05").useLsi);
  },
  get "useLsiValues"() {
    return (__webpack_require__("uu5g05").useLsiValues);
  },
  get "usePreviousValue"() {
    return (__webpack_require__("uu5g05").usePreviousValue);
  },
  get "usePrint"() {
    return (__webpack_require__("uu5g05").usePrint);
  },
  get "useStickyTop"() {
    return (__webpack_require__("uu5g05").useStickyTop);
  },
  get "useUnmountedRef"() {
    return (__webpack_require__("uu5g05").useUnmountedRef);
  },
  get "useDataObject"() {
    return (__webpack_require__("uu5g05").useDataObject);
  },
  get "useDataList"() {
    return (__webpack_require__("uu5g05").useDataList);
  },
  get "useData"() {
    return (__webpack_require__("./hooks/use-data.js").useData);
  },
  get "useListData"() {
    return (__webpack_require__("./hooks/use-list-data.js").useListData);
  },
  get "usePagingListData"() {
    return (__webpack_require__("./hooks/use-paging-list-data.js").usePagingListData);
  },
  get "PagingAutoLoad"() {
    return (__webpack_require__("./hooks/paging-auto-load.js").PagingAutoLoad);
  },
  get "withResize"() {
    return (__webpack_require__("./hooks/with-resize.js").withResize);
  }
};

/***/ }),

/***/ "./hooks/internal/data-hooks-helper.js":
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "combineReducers": () => (/* binding */ combineReducers),
/* harmony export */   "initReducer": () => (/* binding */ initReducer),
/* harmony export */   "performOperation": () => (/* binding */ performOperation),
/* harmony export */   "processBusReducer": () => (/* binding */ processBusReducer)
/* harmony export */ });
/* harmony import */ var uu5g04__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__("uu5g04");
/* harmony import */ var uu5g04__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(uu5g04__WEBPACK_IMPORTED_MODULE_0__);
/**
 * Copyright (C) 2021 Unicorn a.s.
 *
 * This program is free software: you can redistribute it and/or modify it under the terms of the GNU General Public
 * License as published by the Free Software Foundation, either version 3 of the License, or (at your option) any later
 * version.
 *
 * This program is distributed in the hope that it will be useful, but WITHOUT ANY WARRANTY; without even the implied
 * warranty of MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the GNU General Public License at
 * <https://gnu.org/licenses/> for more details.
 *
 * You may obtain additional information at <https://unicorn.com> or contact Unicorn a.s. at address: V Kapslovne 2767/2,
 * Praha 3, Czech Republic or at the email: info@unicorn.com.
 */


// each reducer that is combined will receive parameters "state, action, nextReducer"
// where calling nextReducer(state, action) will call the next reducer based on the order
// how the reducers were combined
function combineReducers(...reducers) {
  let allReducersNonFlat = reducers.filter(Boolean).map(it => it.reducers || [it]);
  let allReducersFlat = [].concat(...allReducersNonFlat);
  let result = allReducersFlat.reduceRight((next, reducer) => function (state, action) {
    return reducer(state, action, next);
  }, v => v);
  result.reducers = allReducersFlat;
  return result;
}
function performOperation(call, callArgs, applyOpToDataFn, type, dispatchAction) {
  return new Promise((resolve, reject) => {
    const id = uu5g04__WEBPACK_IMPORTED_MODULE_0___default().Common.Tools.generateUUID();
    if (typeof call === "function") {
      dispatchAction(type + "Start", {
        id,
        callArgs,
        applyOpToDataFn,
        execFn: () => call(...callArgs).then(data => {
          dispatchAction(type + "Done", {
            data,
            id
          });
          resolve(data);
        }, error => {
          dispatchAction(type + "Fail", {
            error,
            id
          });
          reject(error);
        })
      });
    } else {
      // perform the operation locally
      // TODO Optimize - use single update (maybe call dispatchAction with an array).
      dispatchAction(type + "Start", {
        id,
        callArgs,
        applyOpToDataFn
      });
      dispatchAction(type + "Done", {
        data: null,
        id
      });
      resolve(null);
    }
  });
}

/**
 * Reducer enqueues/dequeues operations onto/from processBus list. Also computes viewState, errorState, error
 * based on first pending operation in processBus (or based on last finished operation if processBus is empty).
 */
function processBusReducer(state, action, nextReducer) {
  let {
    type,
    payload
  } = action;
  let result;
  if (type === "clearOperations") {
    let updatedState;
    let {
      ids
    } = payload || {};
    let cleanupIdsSet = new Set(ids);
    let newProcessBus = state.processBus.filter(op => !cleanupIdsSet.has(op.id));
    if (newProcessBus.length !== state.processBus.length) {
      updatedState = {
        ...state,
        processBus: newProcessBus
      };
    }
    result = nextReducer(updatedState || state, action);
  } else if (!type.match(/(Start|Done|Fail)$/)) {
    result = nextReducer(state, action);
  } else {
    if (type.endsWith("Start")) {
      // starting an operation puts it into the process bus
      let eventType = type.replace(/(Start|Done|Fail)$/, "");
      let {
        id,
        applyOpToDataFn,
        callArgs,
        execFn
      } = payload;
      let newOpItem = {
        id,
        type: eventType,
        applyOpToDataFn,
        execFn,
        callArgs,
        result: undefined,
        error: undefined,
        extraInfo: {}
      };
      result = {
        ...state,
        processBus: [...state.processBus, newOpItem]
      };
    } else {
      // type ends with "Done" or "Fail" - finishing an operation updates its result/error
      // in the process bus, but it still remains there
      let {
        id,
        data,
        error
      } = payload;
      let opIndex = state.processBus.findIndex(it => it.id === id);
      if (opIndex === -1) {
        throw new Error(`Unexpected '${type}' operation in useData hook - such operation was not started, or it has been already processed.`);
      }
      let processBus = [...state.processBus];
      processBus[opIndex] = {
        ...processBus[opIndex],
        result: type.endsWith("Done") ? data === undefined ? null : data : undefined,
        // undefined <=> not applicable
        error: type.endsWith("Fail") ? error === undefined ? null : error : undefined // undefined <=> not applicable
      };

      result = {
        ...state,
        processBus
      };
    }

    // update asyncData & lastFinishedOp info - process all finished (but not-yet-processed) operations upto 1st non-finished
    let i;
    for (i = 0; i < result.processBus.length; i++) {
      let op = result.processBus[i];
      let {
        error: opError,
        result: opResult,
        applyOpToDataFn,
        callArgs
      } = op;
      if (opResult === undefined && opError === undefined) break; // still in progress
      if (op.asyncData !== undefined) continue; // finished but already processed

      if (result === state) result = {
        ...state
      };
      if (result.processBus === state.processBus) result.processBus = [...state.processBus];
      let extraInfo = {}; // extra information, typically the applyOpToDataFn can fill in "items" (final items that the operation was related to)
      result.asyncData = applyOpToDataFn(result.asyncData, callArgs, opResult, opError, extraInfo);
      result.processBus[i] = {
        ...op,
        asyncData: result.asyncData,
        extraInfo
      };
      result.lastFinishedOp = result.processBus[i];
    }

    // compute viewState based on last finished operation or first pending operation
    let lastFinishedOp = result.lastFinishedOp;
    let pendingOp = result.processBus[i];
    if (lastFinishedOp || pendingOp) {
      if (result === state) result = {
        ...state
      };
      Object.assign(result, {
        viewState: pendingOp ? pendingOp.type : lastFinishedOp.error === undefined ? "ready" : "error",
        error: pendingOp ? null : lastFinishedOp.error === undefined ? null : lastFinishedOp.error,
        errorState: pendingOp ? null : lastFinishedOp.error === undefined ? null : lastFinishedOp.type
      });
    }
  }
  return result;
}
function initReducer(state, action, nextReducer) {
  let {
    type,
    payload
  } = action;
  return type === "init" ? payload : nextReducer(state, action);
}

/***/ }),

/***/ "./hooks/internal/trigger-if-almost-visible.js":
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "TriggerIfAlmostVisible": () => (/* binding */ TriggerIfAlmostVisible),
/* harmony export */   "default": () => (__WEBPACK_DEFAULT_EXPORT__)
/* harmony export */ });
/* harmony import */ var uu5g04__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__("uu5g04");
/* harmony import */ var uu5g04__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(uu5g04__WEBPACK_IMPORTED_MODULE_0__);
/* harmony import */ var uu5g05__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__("uu5g05");
/* harmony import */ var uu5g05__WEBPACK_IMPORTED_MODULE_1___default = /*#__PURE__*/__webpack_require__.n(uu5g05__WEBPACK_IMPORTED_MODULE_1__);
//@@viewOn:imports


//@@viewOff:imports

const useWindowRect = () => {
  function getWindowRect() {
    return {
      left: 0,
      top: 0,
      width: innerWidth,
      height: innerHeight,
      right: innerWidth,
      bottom: innerHeight
    };
  }
  let [rect, setRect] = (0,uu5g05__WEBPACK_IMPORTED_MODULE_1__.useState)(getWindowRect);
  (0,uu5g05__WEBPACK_IMPORTED_MODULE_1__.useLayoutEffect)(() => {
    let onResize = e => setRect(getWindowRect());
    window.addEventListener("resize", onResize);
    return () => window.removeEventListener("resize", onResize);
  }, []);
  return rect;
};
const STATICS = {
  //@@viewOn:statics
  displayName: "UU5.Hooks.TriggerIfAlmostVisible"
  //@@viewOff:statics
};

// TODO Add support for any/nearest scroll element. Currently only scrolling on window is supported.
const TriggerIfAlmostVisible = (0,uu5g05__WEBPACK_IMPORTED_MODULE_1__.createComponent)({
  ...STATICS,
  //@@viewOn:propTypes
  propTypes: {},
  //@@viewOff:propTypes

  //@@viewOn:defaultProps
  defaultProps: {},
  //@@viewOff:defaultProps

  render({
    onTrigger,
    triggerDistance = 1000,
    children
  }) {
    //@@viewOn:hooks
    let elementRef = (0,uu5g05__WEBPACK_IMPORTED_MODULE_1__.useRef)();
    let [triggerred, setTriggerred] = (0,uu5g05__WEBPACK_IMPORTED_MODULE_1__.useState)(false);
    let scrollElementRect = useWindowRect();
    let [elementRect, setElementRect] = (0,uu5g05__WEBPACK_IMPORTED_MODULE_1__.useState)();
    (0,uu5g05__WEBPACK_IMPORTED_MODULE_1__.useLayoutEffect)(() => {
      if (!triggerred) {
        setElementRect(elementRef.current.getBoundingClientRect());
        let onScroll = e => setElementRect(elementRef.current.getBoundingClientRect());
        window.addEventListener("scroll", onScroll);
        return () => window.removeEventListener("scroll", onScroll);
      }
    }, [triggerred]);
    (0,uu5g05__WEBPACK_IMPORTED_MODULE_1__.useLayoutEffect)(() => {
      if (elementRef.current && typeof onTrigger === "function" && !triggerred && scrollElementRect && elementRect) {
        if (scrollElementRect.bottom + triggerDistance > elementRect.top) {
          setTriggerred(true);
          onTrigger();
        }
      }
    }, [scrollElementRect, elementRect, triggerDistance, onTrigger, triggerred]);
    //@@viewOff:hooks

    //@@viewOn:interface
    //@@viewOff:interface

    //@@viewOn:private
    //@@viewOff:private

    //@@viewOn:render
    return Uu5g05.Utils.Element.create("div", {
      ref: elementRef
    }, triggerred ? children : null);
    //@@viewOff:render
  }
});

/* harmony default export */ const __WEBPACK_DEFAULT_EXPORT__ = (TriggerIfAlmostVisible);

/***/ }),

/***/ "./hooks/internal/use-parent-size.js":
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "default": () => (__WEBPACK_DEFAULT_EXPORT__),
/* harmony export */   "useParentSize": () => (/* binding */ useParentSize)
/* harmony export */ });
/* harmony import */ var uu5g05__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__("uu5g05");
/* harmony import */ var uu5g05__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(uu5g05__WEBPACK_IMPORTED_MODULE_0__);

function useParentSize(params) {
  const {
    ref,
    width,
    height,
    contentWidth,
    contentHeight
  } = (0,uu5g05__WEBPACK_IMPORTED_MODULE_0__.useElementSize)(params);
  const componentRef = (0,uu5g05__WEBPACK_IMPORTED_MODULE_0__.useRef)();
  if (componentRef.current == null) {
    const spanRefFn = spanRef => ref(spanRef ? spanRef.parentNode : spanRef);
    componentRef.current = function Observer(props) {
      return Uu5g05.Utils.Element.create("span", {
        ref: spanRefFn,
        hidden: true
      });
    };
  }
  return {
    Resizer: componentRef.current,
    width,
    height,
    contentWidth,
    contentHeight
  };
}

/* harmony default export */ const __WEBPACK_DEFAULT_EXPORT__ = (useParentSize);

/***/ }),

/***/ "./hooks/paging-auto-load.js":
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "PagingAutoLoad": () => (/* binding */ PagingAutoLoad)
/* harmony export */ });
/* harmony import */ var uu5g04__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__("uu5g04");
/* harmony import */ var uu5g04__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(uu5g04__WEBPACK_IMPORTED_MODULE_0__);
/* harmony import */ var uu5g05__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__("uu5g05");
/* harmony import */ var uu5g05__WEBPACK_IMPORTED_MODULE_1___default = /*#__PURE__*/__webpack_require__.n(uu5g05__WEBPACK_IMPORTED_MODULE_1__);
/* harmony import */ var _internal_trigger_if_almost_visible__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__("./hooks/internal/trigger-if-almost-visible.js");
//@@viewOn:imports



//@@viewOff:imports

const STATICS = {
  //@@viewOn:statics
  displayName: "UU5.Hooks.PagingAutoLoad"
  //@@viewOff:statics
};

const PagingAutoLoad = (0,uu5g05__WEBPACK_IMPORTED_MODULE_1__.createComponent)({
  ...STATICS,
  //@@viewOn:propTypes
  propTypes: {
    distance: (uu5g04__WEBPACK_IMPORTED_MODULE_0___default().PropTypes.number),
    data: (uu5g04__WEBPACK_IMPORTED_MODULE_0___default().PropTypes.array),
    pageSize: (uu5g04__WEBPACK_IMPORTED_MODULE_0___default().PropTypes.number.isRequired),
    handleLoad: (uu5g04__WEBPACK_IMPORTED_MODULE_0___default().PropTypes.func),
    error: uu5g04__WEBPACK_IMPORTED_MODULE_0___default().PropTypes.oneOfType([(uu5g04__WEBPACK_IMPORTED_MODULE_0___default().PropTypes.func), (uu5g04__WEBPACK_IMPORTED_MODULE_0___default().PropTypes.element), (uu5g04__WEBPACK_IMPORTED_MODULE_0___default().PropTypes.array)]),
    children: uu5g04__WEBPACK_IMPORTED_MODULE_0___default().PropTypes.oneOfType([(uu5g04__WEBPACK_IMPORTED_MODULE_0___default().PropTypes.func), (uu5g04__WEBPACK_IMPORTED_MODULE_0___default().PropTypes.element), (uu5g04__WEBPACK_IMPORTED_MODULE_0___default().PropTypes.array)])
  },
  //@@viewOff:propTypes

  //@@viewOn:defaultProps
  defaultProps: {
    distance: 1000,
    data: undefined,
    pageSize: undefined,
    handleLoad: undefined,
    error: undefined
  },
  //@@viewOff:defaultProps

  render({
    distance,
    data,
    pageSize,
    handleLoad,
    error,
    children
  }) {
    //@@viewOn:hooks
    let [autoLoadError, setAutoLoadError] = (0,uu5g05__WEBPACK_IMPORTED_MODULE_1__.useState)(null);
    //@@viewOff:hooks

    //@@viewOn:interface
    //@@viewOff:interface

    //@@viewOn:private
    let totalLoadedCount = data ? data.filter(it => it != null).length : 0;
    let renderableData = data ? data.length === totalLoadedCount ? data : data.slice(0, data.findIndex(it => it == null)) : [];
    let pageIndex = Math.floor(renderableData.length / pageSize);
    const loadMore = (0,uu5g05__WEBPACK_IMPORTED_MODULE_1__.useCallback)(() => {
      return handleLoad({
        pageInfo: {
          pageIndex,
          pageSize
        }
      }, true);
    }, [handleLoad, pageIndex, pageSize]);
    const onTrigger = (0,uu5g05__WEBPACK_IMPORTED_MODULE_1__.useCallback)(async () => {
      try {
        await loadMore();
        setAutoLoadError(null);
      } catch (e) {
        console.error(e);
        setAutoLoadError({
          key: totalLoadedCount,
          error: e
        });
      }
    }, [loadMore, totalLoadedCount]);
    //@@viewOff:private

    //@@viewOn:render
    function renderError() {
      let result;
      if (error == null) {
        result = Uu5g05.Utils.Element.create((uu5g04__WEBPACK_IMPORTED_MODULE_0___default().Common.Error), {
          error: autoLoadError,
          moreInfo: true
        });
      } else if (typeof error === "function") {
        let Component = error;
        result = Uu5g05.Utils.Element.create(Component, {
          error: autoLoadError.error,
          reload: loadMore
        });
      } else {
        result = error;
      }
      return result;
    }
    function renderLoading() {
      let result = children;
      if (typeof children === "function") {
        let Component = children;
        return Uu5g05.Utils.Element.create(Component, {
          pageIndex: pageIndex,
          pageSize: pageSize
        });
      } else {
        result = children !== undefined ? children : null;
      }
      return result;
    }
    return data && data.length !== totalLoadedCount ? Uu5g05.Utils.Element.create(_internal_trigger_if_almost_visible__WEBPACK_IMPORTED_MODULE_2__["default"], {
      key: totalLoadedCount,
      triggerDistance: distance,
      onTrigger: onTrigger
    }, autoLoadError && autoLoadError.key === totalLoadedCount ? renderError() : renderLoading()) : null;
    //@@viewOff:render
  }
});

/***/ }),

/***/ "./hooks/use-call.js":
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "default": () => (__WEBPACK_DEFAULT_EXPORT__),
/* harmony export */   "useCall": () => (/* binding */ useCall)
/* harmony export */ });
/* harmony import */ var uu5g05__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__("uu5g05");
/* harmony import */ var uu5g05__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(uu5g05__WEBPACK_IMPORTED_MODULE_0__);


// g05: { state="pending|pendingNoData|ready|...", data, errorData={error}, call }   + data can be non-null even if state="error"
// g04: { viewState="call|ready|error", data, error, call }   + data is null if state="error"
function useCall(...hookArgs) {
  var _g05Result$errorData$, _g05Result$errorData;
  let g05Result = (0,uu5g05__WEBPACK_IMPORTED_MODULE_0__.useCall)(...hookArgs);
  let dataRef = (0,uu5g05__WEBPACK_IMPORTED_MODULE_0__.useRef)();
  if (g05Result.state === "error" || g05Result.state === "errorNoData") dataRef.current = null;else if (g05Result.state === "ready" || g05Result.state === "readyNoData") dataRef.current = g05Result.data;
  let result = "viewState" in g05Result ? g05Result : {
    viewState: g05Result.state.replace(/NoData$/, "").replace(/^pending$/, "call"),
    data: dataRef.current,
    error: g05Result.errorData === undefined ? undefined : (_g05Result$errorData$ = (_g05Result$errorData = g05Result.errorData) === null || _g05Result$errorData === void 0 ? void 0 : _g05Result$errorData.error) !== null && _g05Result$errorData$ !== void 0 ? _g05Result$errorData$ : null,
    call: g05Result.call
  };
  return result;
}

/* harmony default export */ const __WEBPACK_DEFAULT_EXPORT__ = (useCall);

/***/ }),

/***/ "./hooks/use-data.js":
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "default": () => (__WEBPACK_DEFAULT_EXPORT__),
/* harmony export */   "useData": () => (/* binding */ useData),
/* harmony export */   "useDataInternal": () => (/* binding */ useDataInternal)
/* harmony export */ });
/* harmony import */ var uu5g04__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__("uu5g04");
/* harmony import */ var uu5g04__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(uu5g04__WEBPACK_IMPORTED_MODULE_0__);
/* harmony import */ var uu5g05__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__("uu5g05");
/* harmony import */ var uu5g05__WEBPACK_IMPORTED_MODULE_1___default = /*#__PURE__*/__webpack_require__.n(uu5g05__WEBPACK_IMPORTED_MODULE_1__);
/* harmony import */ var _internal_data_hooks_helper__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__("./hooks/internal/data-hooks-helper.js");
/**
 * Copyright (C) 2021 Unicorn a.s.
 *
 * This program is free software: you can redistribute it and/or modify it under the terms of the GNU General Public
 * License as published by the Free Software Foundation, either version 3 of the License, or (at your option) any later
 * version.
 *
 * This program is distributed in the hope that it will be useful, but WITHOUT ANY WARRANTY; without even the implied
 * warranty of MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the GNU General Public License at
 * <https://gnu.org/licenses/> for more details.
 *
 * You may obtain additional information at <https://unicorn.com> or contact Unicorn a.s. at address: V Kapslovne 2767/2,
 * Praha 3, Czech Republic or at the email: info@unicorn.com.
 */



function applyLoad(data, callArgs, callResult, callError) {
  if (callError !== undefined) return data;
  return callResult !== undefined ? callResult : data;
}
function applyUpdate(data, callArgs, callResult, callError) {
  if (callError !== undefined) return data;
  return callResult !== undefined ? callResult : callArgs[0];
}
function applySetData(data, callArgs, callResult, callError) {
  return callArgs[0];
}
function dataHookReducer(state, action, nextReducer) {
  // this reducer doesn't really need to do anything => forward it to the next (processBusReducer)
  // which will enqueue/dequeue stuff onto processBus
  return nextReducer(state, action);
}
function useOperationsCleanup(dispatchAction, processBus, preserveOperations) {
  let explicitPendingCleanupRef = (0,uu5g05__WEBPACK_IMPORTED_MODULE_1__.useRef)([]);
  let clearOperations = (0,uu5g05__WEBPACK_IMPORTED_MODULE_1__.useRef)((...args) => {
    explicitPendingCleanupRef.current.push(args);
  }).current;
  let prevProcessBusRef = (0,uu5g05__WEBPACK_IMPORTED_MODULE_1__.useRef)();
  (0,uu5g05__WEBPACK_IMPORTED_MODULE_1__.useEffect)(() => {
    prevProcessBusRef.current = processBus;
  });

  // cleanup finished operations from processBus (this is done in nearest render somewhere after committing current render);
  // note that current processBus can have newly finished operations that we don't want to remove so we have to pass
  // ID of the operation upto which to do the cleanup
  if (prevProcessBusRef.current && (!preserveOperations || explicitPendingCleanupRef.current.length > 0)) {
    let prevProcessBus = prevProcessBusRef.current;
    prevProcessBusRef.current = undefined;
    let finishedOpIds = prevProcessBus.filter(op => op.asyncData !== undefined).map(op => op.id);
    let cleanupIds;
    if (preserveOperations) {
      cleanupIds = new Set();
      let finishedOpIdsSet = new Set(finishedOpIds);
      for (let cleanupArgs of explicitPendingCleanupRef.current) {
        if (cleanupArgs.length === 0 || cleanupArgs[0] == null) {
          cleanupIds = finishedOpIds;
          break;
        } else {
          let cleanupItems = Array.isArray(cleanupArgs[0]) ? cleanupArgs[0] : [cleanupArgs[0]];
          for (let item of cleanupItems) {
            let id = item ? item.id || item : null;
            if (id && finishedOpIdsSet.has(id)) cleanupIds.add(id);
          }
        }
      }
      if (!Array.isArray(cleanupIds)) cleanupIds = [...cleanupIds];
    } else {
      cleanupIds = finishedOpIds;
    }
    explicitPendingCleanupRef.current = [];
    if (cleanupIds.length > 0) {
      dispatchAction("clearOperations", {
        ids: cleanupIds
      });
    }
  }
  return clearOperations;
}
function useDataInternal({
  onLoad,
  onUpdate,
  dtoIn,
  data,
  preserveOperations
}, customReducer) {
  // initialize state with processBus and state reducer(s)
  let reducer = (0,uu5g05__WEBPACK_IMPORTED_MODULE_1__.useMemo)(() => (0,_internal_data_hooks_helper__WEBPACK_IMPORTED_MODULE_2__.combineReducers)(customReducer, dataHookReducer, _internal_data_hooks_helper__WEBPACK_IMPORTED_MODULE_2__.initReducer, _internal_data_hooks_helper__WEBPACK_IMPORTED_MODULE_2__.processBusReducer), [customReducer]);
  let needsInitialLoad = data === undefined && typeof onLoad === "function";
  let [state, dispatch] = (0,uu5g05__WEBPACK_IMPORTED_MODULE_1__.useReducer)(reducer, undefined, () => reducer(undefined, {
    type: "init",
    payload: {
      asyncData: data === undefined ? null : data,
      viewState: needsInitialLoad ? "load" : "ready",
      errorState: null,
      error: null,
      processBus: []
    }
  }));
  let dispatchAction = (0,uu5g05__WEBPACK_IMPORTED_MODULE_1__.useCallback)((type, payload) => dispatch({
    type,
    payload
  }), [dispatch]);
  (0,uu5g05__WEBPACK_IMPORTED_MODULE_1__.useLayoutEffect)(() => {
    // run enqueued operations
    state.processBus.forEach(it => {
      let {
        execFn
      } = it;
      if (execFn) {
        delete it.execFn;
        execFn();
      }
    });
  }, [state.processBus]);
  let syncData = (0,uu5g05__WEBPACK_IMPORTED_MODULE_1__.useMemo)(() => state.processBus.reduce((resultData, op) => op.asyncData !== undefined ? op.asyncData : op.applyOpToDataFn(resultData, op.callArgs, op.result, op.error, op.extraInfo), state.asyncData), [state.asyncData, state.processBus]);
  let operations = (0,uu5g05__WEBPACK_IMPORTED_MODULE_1__.useMemo)(() => state.processBus.map(it => ({
    ...it.extraInfo,
    id: it.id,
    type: it.type,
    args: it.callArgs,
    state: it.error !== undefined ? "error" : it.result !== undefined ? "success" : "pending",
    result: it.error !== undefined ? it.error : it.result !== undefined ? it.result : undefined
  })), [state.processBus]);
  let clearOperations = useOperationsCleanup(dispatchAction, state.processBus, preserveOperations);
  let handleLoad = (0,uu5g05__WEBPACK_IMPORTED_MODULE_1__.useCallback)((...callArgs) => typeof onLoad === "function" ? (0,_internal_data_hooks_helper__WEBPACK_IMPORTED_MODULE_2__.performOperation)(onLoad, callArgs, applyLoad, "load", dispatchAction) : Promise.resolve(null), [onLoad, dispatchAction]);
  let handleUpdate = (0,uu5g05__WEBPACK_IMPORTED_MODULE_1__.useCallback)((...callArgs) => (0,_internal_data_hooks_helper__WEBPACK_IMPORTED_MODULE_2__.performOperation)(onUpdate, callArgs, applyUpdate, "update", dispatchAction), [onUpdate, dispatchAction]);
  let setData = (0,uu5g05__WEBPACK_IMPORTED_MODULE_1__.useCallback)((...callArgs) => (0,_internal_data_hooks_helper__WEBPACK_IMPORTED_MODULE_2__.performOperation)(null, callArgs, applySetData, "set", dispatchAction), [dispatchAction]);

  // didMount, didUpdate, willUnmount
  let dtoInHash;
  try {
    dtoInHash = JSON.stringify(dtoIn);
  } catch (e) {
    uu5g04__WEBPACK_IMPORTED_MODULE_0___default().Common.Tools.error("Invalid dtoIn used for use*Data hook. The value must be JSON-serializable (no functions, no cyclic values, ...).", e);
  }
  let mountRef = (0,uu5g05__WEBPACK_IMPORTED_MODULE_1__.useRef)(false);
  (0,uu5g05__WEBPACK_IMPORTED_MODULE_1__.useEffect)(() => {
    let skip = !mountRef.current && !needsInitialLoad; // skip if mounting and onLoad isn't function (we don't want to reset initialData)
    if (!skip) {
      handleLoad(dtoIn).catch(e => {
        if ((typeof process !== "undefined" && process.env && (process.env.NODE_ENV) || "development") !== "test") uu5g04__WEBPACK_IMPORTED_MODULE_0___default().Common.Tools.error("Loading data failed:", e);
      });
    }
    // eslint-disable-next-line react-hooks/exhaustive-deps
  }, [handleLoad, dtoInHash, onLoad, needsInitialLoad]);
  (0,uu5g05__WEBPACK_IMPORTED_MODULE_1__.useEffect)(() => {
    mountRef.current = true;
  }, []);
  let api = (0,uu5g05__WEBPACK_IMPORTED_MODULE_1__.useMemo)(() => {
    let {
      processBus,
      lastFinishedOp,
      ...restState
    } = state;
    return {
      ...restState,
      syncData,
      operations,
      handleLoad,
      handleUpdate,
      setData,
      clearOperations
    };
  }, [state, syncData, operations, handleLoad, handleUpdate, setData, clearOperations]);
  return {
    api,
    dispatchAction
  };
}
function useData({
  onLoad,
  onUpdate,
  dtoIn,
  data,
  preserveOperations
} = {}) {
  let {
    api
  } = useDataInternal({
    onLoad,
    onUpdate,
    dtoIn,
    data,
    preserveOperations
  }, null);
  return api;
}
/* harmony default export */ const __WEBPACK_DEFAULT_EXPORT__ = (useData);

/***/ }),

/***/ "./hooks/use-language.js":
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "LanguageProvider": () => (/* binding */ LanguageProvider),
/* harmony export */   "default": () => (__WEBPACK_DEFAULT_EXPORT__),
/* harmony export */   "useLanguage": () => (/* reexport safe */ uu5g05__WEBPACK_IMPORTED_MODULE_1__.useLanguage)
/* harmony export */ });
/* harmony import */ var _babel_runtime_helpers_extends__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__("../../node_modules/uu_appg01_devkit/node_modules/@babel/runtime/helpers/extends.js");
/* harmony import */ var _babel_runtime_helpers_extends__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(_babel_runtime_helpers_extends__WEBPACK_IMPORTED_MODULE_0__);
/* harmony import */ var uu5g05__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__("uu5g05");
/* harmony import */ var uu5g05__WEBPACK_IMPORTED_MODULE_1___default = /*#__PURE__*/__webpack_require__.n(uu5g05__WEBPACK_IMPORTED_MODULE_1__);



// g04 Provider uses different props than g05 (initialLanguage + onChange with no possibility to force
// different value from parent afterwards)
const LanguageProvider = (0,uu5g05__WEBPACK_IMPORTED_MODULE_1__.createComponent)({
  uu5Tag: "UU5.Hooks.LanguageProvider",
  propTypes: {
    initialLanguage: uu5g05__WEBPACK_IMPORTED_MODULE_1__.PropTypes.string,
    onChange: uu5g05__WEBPACK_IMPORTED_MODULE_1__.PropTypes.func
  },
  defaultProps: {
    initialLanguage: undefined,
    onChange: undefined
  },
  render(props) {
    const {
      initialLanguage,
      onChange
    } = props;
    const [languageState, setLanguageState] = (0,uu5g05__WEBPACK_IMPORTED_MODULE_1__.useState)({
      language: initialLanguage
    });
    const currentValuesRef = (0,uu5g05__WEBPACK_IMPORTED_MODULE_1__.useRef)();
    currentValuesRef.current = {
      onChange
    };
    (0,uu5g05__WEBPACK_IMPORTED_MODULE_1__.useUpdateEffect)(() => {
      const {
        onChange
      } = currentValuesRef.current;
      if (typeof onChange === "function") onChange({
        language: languageState.language
      });
    }, [languageState.language]);
    return Uu5g05.Utils.Element.create(uu5g05__WEBPACK_IMPORTED_MODULE_1__.LanguageProvider, _babel_runtime_helpers_extends__WEBPACK_IMPORTED_MODULE_0___default()({}, languageState, {
      onChange: setLanguageState
    }), props.children);
  }
});

/* harmony default export */ const __WEBPACK_DEFAULT_EXPORT__ = (uu5g05__WEBPACK_IMPORTED_MODULE_1__.useLanguage);

/***/ }),

/***/ "./hooks/use-level.js":
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "LevelProvider": () => (/* binding */ LevelProvider),
/* harmony export */   "default": () => (__WEBPACK_DEFAULT_EXPORT__),
/* harmony export */   "useLevel": () => (/* binding */ useLevel)
/* harmony export */ });
/* harmony import */ var _babel_runtime_helpers_extends__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__("../../node_modules/uu_appg01_devkit/node_modules/@babel/runtime/helpers/extends.js");
/* harmony import */ var _babel_runtime_helpers_extends__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(_babel_runtime_helpers_extends__WEBPACK_IMPORTED_MODULE_0__);
/* harmony import */ var uu5g05__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__("uu5g05");
/* harmony import */ var uu5g05__WEBPACK_IMPORTED_MODULE_1___default = /*#__PURE__*/__webpack_require__.n(uu5g05__WEBPACK_IMPORTED_MODULE_1__);


const EMPTY_FN = () => {};
function useLevel(...hookArgs) {
  let result = (0,uu5g05__WEBPACK_IMPORTED_MODULE_1__.useLevel)(...hookArgs);
  return Array.isArray(result) ? result[0] : result;
}

// g04 Provider is always fully controlled via props.level (even without onChange);
// it also does not have to handle setLevel
//   => provide onChange to g05 to make it fully controlled but don't do anything
const LevelProvider = (0,uu5g05__WEBPACK_IMPORTED_MODULE_1__.createComponent)({
  uu5Tag: "UU5.Hooks.LevelProvider",
  propTypes: {
    level: uu5g05__WEBPACK_IMPORTED_MODULE_1__.LevelProvider.propTypes.level
  },
  render(props) {
    return Uu5g05.Utils.Element.create(uu5g05__WEBPACK_IMPORTED_MODULE_1__.LevelProvider, _babel_runtime_helpers_extends__WEBPACK_IMPORTED_MODULE_0___default()({}, props, {
      onChange: EMPTY_FN
    }));
  }
});

/* harmony default export */ const __WEBPACK_DEFAULT_EXPORT__ = (useLevel);

/***/ }),

/***/ "./hooks/use-list-data.js":
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "useListData": () => (/* binding */ useListData),
/* harmony export */   "useListDataInternal": () => (/* binding */ useListDataInternal)
/* harmony export */ });
/* harmony import */ var uu5g04__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__("uu5g04");
/* harmony import */ var uu5g04__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(uu5g04__WEBPACK_IMPORTED_MODULE_0__);
/* harmony import */ var uu5g05__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__("uu5g05");
/* harmony import */ var uu5g05__WEBPACK_IMPORTED_MODULE_1___default = /*#__PURE__*/__webpack_require__.n(uu5g05__WEBPACK_IMPORTED_MODULE_1__);
/* harmony import */ var _use_data__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__("./hooks/use-data.js");
/* harmony import */ var _internal_data_hooks_helper__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__("./hooks/internal/data-hooks-helper.js");
/**
 * Copyright (C) 2021 Unicorn a.s.
 *
 * This program is free software: you can redistribute it and/or modify it under the terms of the GNU General Public
 * License as published by the Free Software Foundation, either version 3 of the License, or (at your option) any later
 * version.
 *
 * This program is distributed in the hope that it will be useful, but WITHOUT ANY WARRANTY; without even the implied
 * warranty of MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the GNU General Public License at
 * <https://gnu.org/licenses/> for more details.
 *
 * You may obtain additional information at <https://unicorn.com> or contact Unicorn a.s. at address: V Kapslovne 2767/2,
 * Praha 3, Czech Republic or at the email: info@unicorn.com.
 */





function applyCreate(data, callArgs, callResult, callError, opExtraInfo) {
  let touchedItems; // items that were somehow processed during the operation
  let newItems = callArgs[0];
  if (!Array.isArray(newItems)) newItems = newItems ? [newItems] : [];
  let result;
  if (callError !== undefined && _isRollbackError(callError)) {
    result = data;
    touchedItems = newItems;
  } else {
    if (callError !== undefined) {
      let callErrorItems = Array.isArray(callError) ? callError : callError != null ? [callError] : [];
      touchedItems = newItems.map((it, i) => callErrorItems[i] != null ? {
        ...it,
        ...callErrorItems[i]
      } : it);
      newItems = touchedItems.map((it, i) => callErrorItems[i] != null ? it : null).filter(Boolean);
    } else if (callResult !== undefined) {
      let callResultItems = Array.isArray(callResult) ? callResult : callResult != null ? [callResult] : [];
      touchedItems = newItems.map((it, i) => callResultItems[i] != null ? {
        ...it,
        ...callResultItems[i]
      } : it);
      newItems = touchedItems;
    } else {
      touchedItems = newItems;
    }
    result = [...data, ...newItems];
  }
  opExtraInfo.items = touchedItems;
  return result;
}
function applyUpdate(data, callArgs, callResult, callError, opExtraInfo) {
  let touchedItems;
  let hasIdMatchers = !Array.isArray(callArgs[0]) && typeof callArgs[0] === "object" || Array.isArray(callArgs[0]) && typeof callArgs[0][0] === "object" ? false : true;
  let updatedItems = hasIdMatchers ? callArgs[1] : callArgs[0];
  if (!Array.isArray(updatedItems)) updatedItems = updatedItems ? [updatedItems] : [];
  let idMatchers = hasIdMatchers ? callArgs[0] : updatedItems.map(it => it && it.id);
  let result;
  if (callError !== undefined && _isRollbackError(callError)) {
    result = data;
    touchedItems = _mergeItems(data, updatedItems, idMatchers).touchedItems; // report
  } else {
    let toMerge;
    if (callError !== undefined) {
      let callErrorItems = Array.isArray(callError) ? callError : callError != null ? [callError] : [];
      toMerge = updatedItems.map((it, i) => callErrorItems[i] != null ? {
        ...it,
        ...callErrorItems[i]
      } : null);
    } else if (callResult !== undefined) {
      let callResultItems = Array.isArray(callResult) ? callResult : callResult != null ? [callResult] : [];
      toMerge = updatedItems.map((it, i) => callResultItems[i] != null ? {
        ...it,
        ...callResultItems[i]
      } : it);
    } else {
      toMerge = updatedItems;
    }
    let mergeResult = _mergeItems(data, toMerge, idMatchers);
    result = mergeResult.data;
    touchedItems = mergeResult.touchedItems.map((it, i) => toMerge[i] == null ? {
      ...it,
      ...updatedItems[i]
    } : it);
  }
  opExtraInfo.items = touchedItems;
  return result;
}
function applyDelete(data, callArgs, callResult, callError, opExtraInfo) {
  let touchedItems;
  let deleteItems = callArgs[0];
  if (!Array.isArray(deleteItems)) deleteItems = deleteItems ? [deleteItems] : [];
  let result;
  if (callError !== undefined && _isRollbackError(callError)) {
    result = data;
    touchedItems = deleteItems.map(it => {
      let index = _findItemIndex(it, result);
      return index !== -1 ? result[index] : null;
    });
  } else {
    // recognize callResult containing { uuAppErrorMap: {} } as if it was null (i.e. delete was successful)
    if (callResult && typeof callResult === "object" && Object.keys(callResult).length === 1) {
      let {
        uuAppErrorMap
      } = callResult;
      if (uuAppErrorMap && typeof uuAppErrorMap === "object" && Object.keys(uuAppErrorMap).every(k => (uuAppErrorMap[k] || {}).type !== "error")) {
        callResult = null;
      }
    }
    let callErrorItems = Array.isArray(callError) ? callError : callError != null ? [callError] : [];
    let callResultItems = Array.isArray(callResult) ? callResult : callResult != null ? [callResult] : [];
    result = [...data];
    touchedItems = [];
    for (let i = 0; i < deleteItems.length; i++) {
      let item = deleteItems[i];
      let index = _findItemIndex(item, result);
      if (index !== -1) {
        if (callError !== undefined) {
          if (callErrorItems[i] != null) {
            result[index] = {
              ...result[index],
              ...callErrorItems[i]
            };
            touchedItems.push(result[index]);
          } else {
            let removed = result.splice(index, 1);
            touchedItems.push(removed[0]);
          }
        } else if (callResult !== undefined) {
          if (callResultItems[i] != null) {
            result[index] = {
              ...result[index],
              ...callResultItems[i]
            };
            touchedItems.push(result[index]);
          } else {
            let removed = result.splice(index, 1);
            touchedItems.push(removed[0]);
          }
        } else {
          let removed = result.splice(index, 1);
          touchedItems.push(removed[0]);
        }
      } else {
        touchedItems.push(null); // unmatchable item, report as null in operations[].items[] array
      }
    }
  }

  opExtraInfo.items = touchedItems;
  return result;
}
function _findItemIndex(item, data) {
  const findItem = typeof item === "function" ? item : typeof item === "object" ? it => it && it.id != null && it.id === item.id : it => it && it.id != null && it.id === item;
  return item != null ? data.findIndex(findItem) : -1;
}
function _mergeItems(targetList, sourceList, itemMatchers = null) {
  let touchedItems = [];
  let result = Array.isArray(targetList) ? [...targetList] : targetList ? [targetList] : [];
  let list = Array.isArray(sourceList) ? sourceList : sourceList ? [sourceList] : [];
  let itemMatchersList = Array.isArray(itemMatchers) ? itemMatchers : itemMatchers ? [itemMatchers] : [];
  for (let i = 0; i < list.length; i++) {
    let index = _findItemIndex(itemMatchersList[i] || list[i], result);
    if (index !== -1) result[index] = list[i] != null ? {
      ...result[index],
      ...list[i]
    } : result[index];
    touchedItems.push(index !== -1 ? result[index] : list[i]);
  }
  return {
    data: result,
    touchedItems
  };
}
function _isRollbackError(error) {
  return error instanceof Error || error && "status" in error && typeof error.headers === "function";
}
function listDataHookReducer(state, action, nextReducer) {
  let result;
  let {
    type,
    payload
  } = action;
  switch (type) {
    case "updateStart":
      {
        // override "applyOpToDataFn" to do item merging instead of replacing whole data
        action.payload.applyOpToDataFn = applyUpdate;
        result = nextReducer(state, action);
        break;
      }
    case "loadDone":
      {
        result = nextReducer(state, action);
        if ((typeof process !== "undefined" && process.env && (process.env.NODE_ENV) || "development") === "development" && payload.data && Array.isArray(payload.data.itemList) && result && !Array.isArray(result.asyncData)) {
          uu5g04__WEBPACK_IMPORTED_MODULE_0___default().Common.Tools.warning("useListData hook received object (with 'itemList' field) as the result of onLoad call which isn't supported. The result must be an array or you can use usePagingListData hook instead.");
        }
        break;
      }
    default:
      result = nextReducer(state, action);
      if (result === state) return state;
    // no re-render needed
  }

  return result;
}
function useListDataInternal({
  onLoad,
  onCreate,
  onUpdate,
  onDelete,
  dtoIn,
  data
} = {}, customReducer) {
  let reducer = (0,uu5g05__WEBPACK_IMPORTED_MODULE_1__.useMemo)(() => (0,_internal_data_hooks_helper__WEBPACK_IMPORTED_MODULE_3__.combineReducers)(customReducer, listDataHookReducer), [customReducer]);
  let {
    api: dataHookApi,
    dispatchAction
  } = (0,_use_data__WEBPACK_IMPORTED_MODULE_2__.useDataInternal)({
    onLoad,
    onUpdate,
    dtoIn,
    data
  }, reducer);
  let currentValuesRef = (0,uu5g05__WEBPACK_IMPORTED_MODULE_1__.useRef)();
  currentValuesRef.current = {
    onCreate,
    onDelete
  };
  let api = (0,uu5g05__WEBPACK_IMPORTED_MODULE_1__.useMemo)(() => {
    // changing onCreate/onDelete should not do any re-renders (they will be used next time
    // handleCreate/handleDelete is called, but not sooner) => pass them around using ref
    let {
      onCreate,
      onDelete
    } = currentValuesRef.current;
    return {
      ...dataHookApi,
      handleCreate: (...callArgs) => (0,_internal_data_hooks_helper__WEBPACK_IMPORTED_MODULE_3__.performOperation)(onCreate, callArgs, applyCreate, "create", dispatchAction),
      handleDelete: (...callArgs) => (0,_internal_data_hooks_helper__WEBPACK_IMPORTED_MODULE_3__.performOperation)(onDelete, callArgs, applyDelete, "delete", dispatchAction)
    };
  }, [dataHookApi, dispatchAction]);
  return {
    api,
    dispatchAction
  };
}
function useListData({
  onLoad,
  onCreate,
  onUpdate,
  onDelete,
  dtoIn,
  data
} = {}) {
  let {
    api
  } = useListDataInternal({
    onLoad,
    onCreate,
    onUpdate,
    onDelete,
    dtoIn,
    data
  }, null);
  return api;
}

/***/ }),

/***/ "./hooks/use-paging-list-data.js":
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "usePagingListData": () => (/* binding */ usePagingListData)
/* harmony export */ });
/* harmony import */ var uu5g04__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__("uu5g04");
/* harmony import */ var uu5g04__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(uu5g04__WEBPACK_IMPORTED_MODULE_0__);
/* harmony import */ var uu5g05__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__("uu5g05");
/* harmony import */ var uu5g05__WEBPACK_IMPORTED_MODULE_1___default = /*#__PURE__*/__webpack_require__.n(uu5g05__WEBPACK_IMPORTED_MODULE_1__);
/* harmony import */ var _use_list_data__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__("./hooks/use-list-data.js");
/**
 * Copyright (C) 2021 Unicorn a.s.
 *
 * This program is free software: you can redistribute it and/or modify it under the terms of the GNU General Public
 * License as published by the Free Software Foundation, either version 3 of the License, or (at your option) any later
 * version.
 *
 * This program is distributed in the hope that it will be useful, but WITHOUT ANY WARRANTY; without even the implied
 * warranty of MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the GNU General Public License at
 * <https://gnu.org/licenses/> for more details.
 *
 * You may obtain additional information at <https://unicorn.com> or contact Unicorn a.s. at address: V Kapslovne 2767/2,
 * Praha 3, Czech Republic or at the email: info@unicorn.com.
 */




function applyLoad(data, callArgs, callResult, callError) {
  if (callError !== undefined) return data;
  if (callResult === undefined) return data;

  // don't merge if explicit flag is set
  let overwriteAllData = !callArgs[1];
  let itemList = Array.isArray(callResult) ? callResult : callResult && callResult.itemList || null;
  let pageInfo = Array.isArray(callResult) ? null : callResult && callResult.pageInfo || null;
  let newData = itemList || [];
  if (pageInfo) {
    // merge response page data (callResult) into the old data (data)
    let oldData = (!overwriteAllData ? data : null) || [];
    let from = pageInfo.pageIndex * pageInfo.pageSize || 0;
    let to = from + (itemList ? itemList.length : 0);
    newData = new Array(typeof pageInfo.total === "number" ? pageInfo.total : Math.max(to, oldData.length));
    for (let i = 0, len = newData.length; i < len; ++i) {
      newData[i] = from <= i && i < to ? itemList[i - from] : oldData[i];
    }
  }
  return newData;
}
function getStateReducer(pageSize) {
  return function stateReducer(state, action, nextReducer) {
    let result;
    let {
      type,
      payload
    } = action;
    switch (type) {
      case "init":
        {
          // unwrap itemList, pageInfo if that's what is in asyncData (we want to have there only an array)
          let itemList = Array.isArray(payload.asyncData) ? payload.asyncData : payload.asyncData && payload.asyncData.itemList || null;
          let pageInfo = Array.isArray(payload.asyncData) ? null : payload.asyncData && payload.asyncData.pageInfo || null;
          let newState = nextReducer(state, {
            type,
            payload: {
              ...payload,
              asyncData: itemList
            }
          });
          result = {
            ...newState,
            pageInfo
          };
          break;
        }
      case "loadStart":
        {
          // add pageSize to the load request
          let {
            callArgs
          } = payload;
          let dtoInData = callArgs[0];
          if (!dtoInData || !dtoInData.pageInfo || !dtoInData.pageInfo.pageSize) {
            callArgs[0] = {
              ...dtoInData,
              pageInfo: {
                ...(dtoInData || {}).pageInfo,
                pageSize
              }
            };
          }

          // change "apply" fn to do data merging instead of data replacing
          payload.applyOpToDataFn = applyLoad;
          result = nextReducer(state, action);
          break;
        }
      case "loadDone":
        {
          let newState = nextReducer(state, action);
          result = {
            ...newState,
            pageInfo: payload && payload.data && payload.data.pageInfo || null
          };
          break;
        }
      default:
        {
          result = nextReducer(state, action);
          if (result === state) return state; // no re-render needed
        }
    }

    return result;
  };
}
function usePagingListData({
  pageSize = 50,
  ...opts
} = {}) {
  let stateReducer = (0,uu5g05__WEBPACK_IMPORTED_MODULE_1__.useMemo)(() => getStateReducer(pageSize), [pageSize]);
  let {
    api
  } = (0,_use_list_data__WEBPACK_IMPORTED_MODULE_2__.useListDataInternal)(opts, stateReducer);
  return api;
}

/***/ }),

/***/ "./hooks/use-screen-size.js":
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "ScreenSizeProvider": () => (/* binding */ ScreenSizeProvider),
/* harmony export */   "default": () => (__WEBPACK_DEFAULT_EXPORT__),
/* harmony export */   "useScreenSize": () => (/* binding */ useScreenSize)
/* harmony export */ });
/* harmony import */ var _babel_runtime_helpers_extends__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__("../../node_modules/uu_appg01_devkit/node_modules/@babel/runtime/helpers/extends.js");
/* harmony import */ var _babel_runtime_helpers_extends__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(_babel_runtime_helpers_extends__WEBPACK_IMPORTED_MODULE_0__);
/* harmony import */ var uu5g05__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__("uu5g05");
/* harmony import */ var uu5g05__WEBPACK_IMPORTED_MODULE_1___default = /*#__PURE__*/__webpack_require__.n(uu5g05__WEBPACK_IMPORTED_MODULE_1__);


const EMPTY_FN = () => {};
function useScreenSize(...hookArgs) {
  let result = (0,uu5g05__WEBPACK_IMPORTED_MODULE_1__.useScreenSize)(...hookArgs);
  return Array.isArray(result) ? result[0] : result;
}

// g04 Provider is always fully controlled via props.screenSize (even without onChange);
// it also does not have to handle setScreenSize
//   => provide onChange to g05 to make it fully controlled but don't do anything
const ScreenSizeProvider = (0,uu5g05__WEBPACK_IMPORTED_MODULE_1__.createComponent)({
  uu5Tag: "UU5.Hooks.ScreenSizeProvider",
  propTypes: {
    screenSize: uu5g05__WEBPACK_IMPORTED_MODULE_1__.ScreenSizeProvider.propTypes.screenSize
  },
  render(props) {
    return Uu5g05.Utils.Element.create(uu5g05__WEBPACK_IMPORTED_MODULE_1__.ScreenSizeProvider, _babel_runtime_helpers_extends__WEBPACK_IMPORTED_MODULE_0___default()({}, props, {
      onChange: EMPTY_FN
    }));
  }
});

/* harmony default export */ const __WEBPACK_DEFAULT_EXPORT__ = (useScreenSize);

/***/ }),

/***/ "./hooks/use-session.js":
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "default": () => (__WEBPACK_DEFAULT_EXPORT__),
/* harmony export */   "useSession": () => (/* binding */ useSession)
/* harmony export */ });
/* harmony import */ var uu5g05__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__("uu5g05");
/* harmony import */ var uu5g05__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(uu5g05__WEBPACK_IMPORTED_MODULE_0__);


// uu5g04: { sessionState, ... }
// uu5g05: { state, ... }  (uu5g05 >= 0.15.0)
function useSession(...hookArgs) {
  let g05Result = (0,uu5g05__WEBPACK_IMPORTED_MODULE_0__.useSession)(...hookArgs);
  let result = (0,uu5g05__WEBPACK_IMPORTED_MODULE_0__.useMemo)(() => {
    if (!g05Result || "sessionState" in g05Result || Object.keys(g05Result).length === 0) return g05Result;
    let {
      state,
      ...result
    } = g05Result;
    result.sessionState = state;
    return result;
  }, [g05Result]);
  return result;
}

/* harmony default export */ const __WEBPACK_DEFAULT_EXPORT__ = (useSession);

/***/ }),

/***/ "./hooks/use-time-zone.js":
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "TimeZoneProvider": () => (/* binding */ TimeZoneProvider),
/* harmony export */   "default": () => (__WEBPACK_DEFAULT_EXPORT__),
/* harmony export */   "useTimeZone": () => (/* reexport safe */ uu5g05__WEBPACK_IMPORTED_MODULE_1__.useTimeZone)
/* harmony export */ });
/* harmony import */ var _babel_runtime_helpers_extends__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__("../../node_modules/uu_appg01_devkit/node_modules/@babel/runtime/helpers/extends.js");
/* harmony import */ var _babel_runtime_helpers_extends__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(_babel_runtime_helpers_extends__WEBPACK_IMPORTED_MODULE_0__);
/* harmony import */ var uu5g05__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__("uu5g05");
/* harmony import */ var uu5g05__WEBPACK_IMPORTED_MODULE_1___default = /*#__PURE__*/__webpack_require__.n(uu5g05__WEBPACK_IMPORTED_MODULE_1__);



// g04 Provider uses different props than g05 (initialTimeZone + onChange with no possibility to force
// different value from parent afterwards)
const TimeZoneProvider = (0,uu5g05__WEBPACK_IMPORTED_MODULE_1__.createComponent)({
  uu5Tag: "UU5.Hooks.TimeZoneProvider",
  propTypes: {
    initialTimeZone: uu5g05__WEBPACK_IMPORTED_MODULE_1__.PropTypes.string,
    onChange: uu5g05__WEBPACK_IMPORTED_MODULE_1__.PropTypes.func
  },
  defaultProps: {
    initialTimeZone: new Intl.DateTimeFormat().resolvedOptions().timeZone,
    onChange: undefined
  },
  render(props) {
    const {
      initialTimeZone,
      onChange
    } = props;
    const [timeZoneState, setTimeZoneState] = (0,uu5g05__WEBPACK_IMPORTED_MODULE_1__.useState)({
      timeZone: initialTimeZone
    });
    const currentValuesRef = (0,uu5g05__WEBPACK_IMPORTED_MODULE_1__.useRef)();
    currentValuesRef.current = {
      onChange
    };
    (0,uu5g05__WEBPACK_IMPORTED_MODULE_1__.useUpdateEffect)(() => {
      const {
        onChange
      } = currentValuesRef.current;
      if (typeof onChange === "function") onChange({
        timeZone: timeZoneState.timeZone
      });
    }, [timeZoneState.timeZone]);
    return Uu5g05.Utils.Element.create(uu5g05__WEBPACK_IMPORTED_MODULE_1__.TimeZoneProvider, _babel_runtime_helpers_extends__WEBPACK_IMPORTED_MODULE_0___default()({}, timeZoneState, {
      onChange: setTimeZoneState
    }), props.children);
  }
});

/* harmony default export */ const __WEBPACK_DEFAULT_EXPORT__ = (uu5g05__WEBPACK_IMPORTED_MODULE_1__.useTimeZone);

/***/ }),

/***/ "./hooks/use-user-preferences.js":
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "UserPreferencesProvider": () => (/* binding */ UserPreferencesProvider),
/* harmony export */   "default": () => (__WEBPACK_DEFAULT_EXPORT__),
/* harmony export */   "useUserPreferences": () => (/* binding */ useUserPreferences)
/* harmony export */ });
/* harmony import */ var _babel_runtime_helpers_extends__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__("../../node_modules/uu_appg01_devkit/node_modules/@babel/runtime/helpers/extends.js");
/* harmony import */ var _babel_runtime_helpers_extends__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(_babel_runtime_helpers_extends__WEBPACK_IMPORTED_MODULE_0__);
/* harmony import */ var uu5g05__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__("uu5g05");
/* harmony import */ var uu5g05__WEBPACK_IMPORTED_MODULE_1___default = /*#__PURE__*/__webpack_require__.n(uu5g05__WEBPACK_IMPORTED_MODULE_1__);


const EMPTY_FN = () => {};
function useUserPreferences(...hookArgs) {
  let result = (0,uu5g05__WEBPACK_IMPORTED_MODULE_1__.useUserPreferences)(...hookArgs);
  return Array.isArray(result) ? result[0] : result;
}

// g04 Provider is always fully controlled via props.userPreferences (even without onChange);
// it also does not have to handle setUserPreferences
//   => provide onChange to g05 to make it fully controlled but don't do anything
const UserPreferencesProvider = (0,uu5g05__WEBPACK_IMPORTED_MODULE_1__.createComponent)({
  uu5Tag: "UU5.Hooks.UserPreferencesProvider",
  render(props) {
    return Uu5g05.Utils.Element.create(uu5g05__WEBPACK_IMPORTED_MODULE_1__.UserPreferencesProvider, _babel_runtime_helpers_extends__WEBPACK_IMPORTED_MODULE_0___default()({}, props, {
      onChange: EMPTY_FN
    }));
  }
});

/* harmony default export */ const __WEBPACK_DEFAULT_EXPORT__ = (useUserPreferences);

/***/ }),

/***/ "./hooks/with-resize.js":
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "default": () => (__WEBPACK_DEFAULT_EXPORT__),
/* harmony export */   "withResize": () => (/* binding */ withResize)
/* harmony export */ });
/* harmony import */ var _babel_runtime_helpers_extends__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__("../../node_modules/uu_appg01_devkit/node_modules/@babel/runtime/helpers/extends.js");
/* harmony import */ var _babel_runtime_helpers_extends__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(_babel_runtime_helpers_extends__WEBPACK_IMPORTED_MODULE_0__);
/* harmony import */ var uu5g05__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__("uu5g05");
/* harmony import */ var uu5g05__WEBPACK_IMPORTED_MODULE_1___default = /*#__PURE__*/__webpack_require__.n(uu5g05__WEBPACK_IMPORTED_MODULE_1__);
/* harmony import */ var _internal_use_parent_size__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__("./hooks/internal/use-parent-size.js");



const withResize = (Component, reserveSpace) => (0,uu5g05__WEBPACK_IMPORTED_MODULE_1__.createComponent)({
  displayName: "withResize(" + Component.displayName + ")",
  propTypes: {
    width: uu5g05__WEBPACK_IMPORTED_MODULE_1__.PropTypes.oneOfType([uu5g05__WEBPACK_IMPORTED_MODULE_1__.PropTypes.number, uu5g05__WEBPACK_IMPORTED_MODULE_1__.PropTypes.oneOf(["auto"])]),
    height: uu5g05__WEBPACK_IMPORTED_MODULE_1__.PropTypes.oneOfType([uu5g05__WEBPACK_IMPORTED_MODULE_1__.PropTypes.number, uu5g05__WEBPACK_IMPORTED_MODULE_1__.PropTypes.oneOf(["auto"])])
  },
  render(props, ref) {
    if (Component.isStateless) ref = undefined;
    let {
      Resizer,
      contentWidth,
      contentHeight
    } = (0,_internal_use_parent_size__WEBPACK_IMPORTED_MODULE_2__.useParentSize)();
    let usedWidth = props.width || contentWidth;
    let usedHeight = props.height || contentHeight;
    let shouldRender = (0,uu5g05__WEBPACK_IMPORTED_MODULE_1__.useRef)(false);
    if (!shouldRender.current && usedWidth && usedHeight) {
      shouldRender.current = true;
    }
    return Uu5g05.Utils.Element.create(Uu5g05.Fragment, null, Uu5g05.Utils.Element.create(Resizer, null), shouldRender.current ? Uu5g05.Utils.Element.create(Component, _babel_runtime_helpers_extends__WEBPACK_IMPORTED_MODULE_0___default()({}, props, {
      width: usedWidth,
      height: usedHeight,
      ref: ref
    })) : reserveSpace && (usedWidth || usedHeight) ? Uu5g05.Utils.Element.create("div", {
      style: {
        width: usedWidth || undefined,
        height: usedHeight || undefined
      }
    }) : null);
  }
}, !Component.isStateless);
/* harmony default export */ const __WEBPACK_DEFAULT_EXPORT__ = (withResize);

/***/ }),

/***/ "../target/webpack-tmp/hooks/hooks-build.js":
/***/ ((module, __unused_webpack_exports, __webpack_require__) => {

var mod = __webpack_require__("module");
var isDoc = typeof document !== "undefined";
var uri = ((mod ? mod.uri : isDoc && (document.currentScript || Array.prototype.slice.call(document.getElementsByTagName("script"), -1)[0] || {}).src) || "").toString();
uri = uri.split(/\//).slice(0, -1).join("/") + "/"; // runtime publicPath configuration required for proper linking of styles, background images, ...
var floatingVersion = "/1.0.0/";
if (uri.substr(-floatingVersion.length) === floatingVersion) uri = uri.substr(0, uri.length - floatingVersion.length) + "/1.58.8/";
__webpack_require__.p = (typeof process !== "undefined" && process.env && (process.env.NODE_ENV) || "development") === "test" && uri === "/" ? "file://" + eval("__filename").replace(/[^/\\]*$/, "") : uri;
module.exports = __webpack_require__("./hooks/hooks-build.js");
var ex = module.exports;
if (ex && typeof ex === "object") {
  if (!("version" in ex)) Object.defineProperty(ex, "version", {
    configurable: true,
    value: "1.58.8"
  });
  if (!("name" in ex)) Object.defineProperty(ex, "name", {
    configurable: true,
    value: "uu5g04-hooks".split(/[\/\\]/).pop()
  });
  if (!("namespace" in ex)) Object.defineProperty(ex, "namespace", {
    configurable: true,
    value: "UU5.Hooks"
  });
}

/***/ }),

/***/ "../../node_modules/resize-observer-polyfill/dist/ResizeObserver.es.js":
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "default": () => (__WEBPACK_DEFAULT_EXPORT__)
/* harmony export */ });
/**
 * A collection of shims that provide minimal functionality of the ES6 collections.
 *
 * These implementations are not meant to be used outside of the ResizeObserver
 * modules as they cover only a limited range of use cases.
 */
/* eslint-disable require-jsdoc, valid-jsdoc */
var MapShim = (function () {
    if (typeof Map !== 'undefined') {
        return Map;
    }
    /**
     * Returns index in provided array that matches the specified key.
     *
     * @param {Array<Array>} arr
     * @param {*} key
     * @returns {number}
     */
    function getIndex(arr, key) {
        var result = -1;
        arr.some(function (entry, index) {
            if (entry[0] === key) {
                result = index;
                return true;
            }
            return false;
        });
        return result;
    }
    return /** @class */ (function () {
        function class_1() {
            this.__entries__ = [];
        }
        Object.defineProperty(class_1.prototype, "size", {
            /**
             * @returns {boolean}
             */
            get: function () {
                return this.__entries__.length;
            },
            enumerable: true,
            configurable: true
        });
        /**
         * @param {*} key
         * @returns {*}
         */
        class_1.prototype.get = function (key) {
            var index = getIndex(this.__entries__, key);
            var entry = this.__entries__[index];
            return entry && entry[1];
        };
        /**
         * @param {*} key
         * @param {*} value
         * @returns {void}
         */
        class_1.prototype.set = function (key, value) {
            var index = getIndex(this.__entries__, key);
            if (~index) {
                this.__entries__[index][1] = value;
            }
            else {
                this.__entries__.push([key, value]);
            }
        };
        /**
         * @param {*} key
         * @returns {void}
         */
        class_1.prototype.delete = function (key) {
            var entries = this.__entries__;
            var index = getIndex(entries, key);
            if (~index) {
                entries.splice(index, 1);
            }
        };
        /**
         * @param {*} key
         * @returns {void}
         */
        class_1.prototype.has = function (key) {
            return !!~getIndex(this.__entries__, key);
        };
        /**
         * @returns {void}
         */
        class_1.prototype.clear = function () {
            this.__entries__.splice(0);
        };
        /**
         * @param {Function} callback
         * @param {*} [ctx=null]
         * @returns {void}
         */
        class_1.prototype.forEach = function (callback, ctx) {
            if (ctx === void 0) { ctx = null; }
            for (var _i = 0, _a = this.__entries__; _i < _a.length; _i++) {
                var entry = _a[_i];
                callback.call(ctx, entry[1], entry[0]);
            }
        };
        return class_1;
    }());
})();

/**
 * Detects whether window and document objects are available in current environment.
 */
var isBrowser = typeof window !== 'undefined' && typeof document !== 'undefined' && window.document === document;

// Returns global object of a current environment.
var global$1 = (function () {
    if (typeof __webpack_require__.g !== 'undefined' && __webpack_require__.g.Math === Math) {
        return __webpack_require__.g;
    }
    if (typeof self !== 'undefined' && self.Math === Math) {
        return self;
    }
    if (typeof window !== 'undefined' && window.Math === Math) {
        return window;
    }
    // eslint-disable-next-line no-new-func
    return Function('return this')();
})();

/**
 * A shim for the requestAnimationFrame which falls back to the setTimeout if
 * first one is not supported.
 *
 * @returns {number} Requests' identifier.
 */
var requestAnimationFrame$1 = (function () {
    if (typeof requestAnimationFrame === 'function') {
        // It's required to use a bounded function because IE sometimes throws
        // an "Invalid calling object" error if rAF is invoked without the global
        // object on the left hand side.
        return requestAnimationFrame.bind(global$1);
    }
    return function (callback) { return setTimeout(function () { return callback(Date.now()); }, 1000 / 60); };
})();

// Defines minimum timeout before adding a trailing call.
var trailingTimeout = 2;
/**
 * Creates a wrapper function which ensures that provided callback will be
 * invoked only once during the specified delay period.
 *
 * @param {Function} callback - Function to be invoked after the delay period.
 * @param {number} delay - Delay after which to invoke callback.
 * @returns {Function}
 */
function throttle (callback, delay) {
    var leadingCall = false, trailingCall = false, lastCallTime = 0;
    /**
     * Invokes the original callback function and schedules new invocation if
     * the "proxy" was called during current request.
     *
     * @returns {void}
     */
    function resolvePending() {
        if (leadingCall) {
            leadingCall = false;
            callback();
        }
        if (trailingCall) {
            proxy();
        }
    }
    /**
     * Callback invoked after the specified delay. It will further postpone
     * invocation of the original function delegating it to the
     * requestAnimationFrame.
     *
     * @returns {void}
     */
    function timeoutCallback() {
        requestAnimationFrame$1(resolvePending);
    }
    /**
     * Schedules invocation of the original function.
     *
     * @returns {void}
     */
    function proxy() {
        var timeStamp = Date.now();
        if (leadingCall) {
            // Reject immediately following calls.
            if (timeStamp - lastCallTime < trailingTimeout) {
                return;
            }
            // Schedule new call to be in invoked when the pending one is resolved.
            // This is important for "transitions" which never actually start
            // immediately so there is a chance that we might miss one if change
            // happens amids the pending invocation.
            trailingCall = true;
        }
        else {
            leadingCall = true;
            trailingCall = false;
            setTimeout(timeoutCallback, delay);
        }
        lastCallTime = timeStamp;
    }
    return proxy;
}

// Minimum delay before invoking the update of observers.
var REFRESH_DELAY = 20;
// A list of substrings of CSS properties used to find transition events that
// might affect dimensions of observed elements.
var transitionKeys = ['top', 'right', 'bottom', 'left', 'width', 'height', 'size', 'weight'];
// Check if MutationObserver is available.
var mutationObserverSupported = typeof MutationObserver !== 'undefined';
/**
 * Singleton controller class which handles updates of ResizeObserver instances.
 */
var ResizeObserverController = /** @class */ (function () {
    /**
     * Creates a new instance of ResizeObserverController.
     *
     * @private
     */
    function ResizeObserverController() {
        /**
         * Indicates whether DOM listeners have been added.
         *
         * @private {boolean}
         */
        this.connected_ = false;
        /**
         * Tells that controller has subscribed for Mutation Events.
         *
         * @private {boolean}
         */
        this.mutationEventsAdded_ = false;
        /**
         * Keeps reference to the instance of MutationObserver.
         *
         * @private {MutationObserver}
         */
        this.mutationsObserver_ = null;
        /**
         * A list of connected observers.
         *
         * @private {Array<ResizeObserverSPI>}
         */
        this.observers_ = [];
        this.onTransitionEnd_ = this.onTransitionEnd_.bind(this);
        this.refresh = throttle(this.refresh.bind(this), REFRESH_DELAY);
    }
    /**
     * Adds observer to observers list.
     *
     * @param {ResizeObserverSPI} observer - Observer to be added.
     * @returns {void}
     */
    ResizeObserverController.prototype.addObserver = function (observer) {
        if (!~this.observers_.indexOf(observer)) {
            this.observers_.push(observer);
        }
        // Add listeners if they haven't been added yet.
        if (!this.connected_) {
            this.connect_();
        }
    };
    /**
     * Removes observer from observers list.
     *
     * @param {ResizeObserverSPI} observer - Observer to be removed.
     * @returns {void}
     */
    ResizeObserverController.prototype.removeObserver = function (observer) {
        var observers = this.observers_;
        var index = observers.indexOf(observer);
        // Remove observer if it's present in registry.
        if (~index) {
            observers.splice(index, 1);
        }
        // Remove listeners if controller has no connected observers.
        if (!observers.length && this.connected_) {
            this.disconnect_();
        }
    };
    /**
     * Invokes the update of observers. It will continue running updates insofar
     * it detects changes.
     *
     * @returns {void}
     */
    ResizeObserverController.prototype.refresh = function () {
        var changesDetected = this.updateObservers_();
        // Continue running updates if changes have been detected as there might
        // be future ones caused by CSS transitions.
        if (changesDetected) {
            this.refresh();
        }
    };
    /**
     * Updates every observer from observers list and notifies them of queued
     * entries.
     *
     * @private
     * @returns {boolean} Returns "true" if any observer has detected changes in
     *      dimensions of it's elements.
     */
    ResizeObserverController.prototype.updateObservers_ = function () {
        // Collect observers that have active observations.
        var activeObservers = this.observers_.filter(function (observer) {
            return observer.gatherActive(), observer.hasActive();
        });
        // Deliver notifications in a separate cycle in order to avoid any
        // collisions between observers, e.g. when multiple instances of
        // ResizeObserver are tracking the same element and the callback of one
        // of them changes content dimensions of the observed target. Sometimes
        // this may result in notifications being blocked for the rest of observers.
        activeObservers.forEach(function (observer) { return observer.broadcastActive(); });
        return activeObservers.length > 0;
    };
    /**
     * Initializes DOM listeners.
     *
     * @private
     * @returns {void}
     */
    ResizeObserverController.prototype.connect_ = function () {
        // Do nothing if running in a non-browser environment or if listeners
        // have been already added.
        if (!isBrowser || this.connected_) {
            return;
        }
        // Subscription to the "Transitionend" event is used as a workaround for
        // delayed transitions. This way it's possible to capture at least the
        // final state of an element.
        document.addEventListener('transitionend', this.onTransitionEnd_);
        window.addEventListener('resize', this.refresh);
        if (mutationObserverSupported) {
            this.mutationsObserver_ = new MutationObserver(this.refresh);
            this.mutationsObserver_.observe(document, {
                attributes: true,
                childList: true,
                characterData: true,
                subtree: true
            });
        }
        else {
            document.addEventListener('DOMSubtreeModified', this.refresh);
            this.mutationEventsAdded_ = true;
        }
        this.connected_ = true;
    };
    /**
     * Removes DOM listeners.
     *
     * @private
     * @returns {void}
     */
    ResizeObserverController.prototype.disconnect_ = function () {
        // Do nothing if running in a non-browser environment or if listeners
        // have been already removed.
        if (!isBrowser || !this.connected_) {
            return;
        }
        document.removeEventListener('transitionend', this.onTransitionEnd_);
        window.removeEventListener('resize', this.refresh);
        if (this.mutationsObserver_) {
            this.mutationsObserver_.disconnect();
        }
        if (this.mutationEventsAdded_) {
            document.removeEventListener('DOMSubtreeModified', this.refresh);
        }
        this.mutationsObserver_ = null;
        this.mutationEventsAdded_ = false;
        this.connected_ = false;
    };
    /**
     * "Transitionend" event handler.
     *
     * @private
     * @param {TransitionEvent} event
     * @returns {void}
     */
    ResizeObserverController.prototype.onTransitionEnd_ = function (_a) {
        var _b = _a.propertyName, propertyName = _b === void 0 ? '' : _b;
        // Detect whether transition may affect dimensions of an element.
        var isReflowProperty = transitionKeys.some(function (key) {
            return !!~propertyName.indexOf(key);
        });
        if (isReflowProperty) {
            this.refresh();
        }
    };
    /**
     * Returns instance of the ResizeObserverController.
     *
     * @returns {ResizeObserverController}
     */
    ResizeObserverController.getInstance = function () {
        if (!this.instance_) {
            this.instance_ = new ResizeObserverController();
        }
        return this.instance_;
    };
    /**
     * Holds reference to the controller's instance.
     *
     * @private {ResizeObserverController}
     */
    ResizeObserverController.instance_ = null;
    return ResizeObserverController;
}());

/**
 * Defines non-writable/enumerable properties of the provided target object.
 *
 * @param {Object} target - Object for which to define properties.
 * @param {Object} props - Properties to be defined.
 * @returns {Object} Target object.
 */
var defineConfigurable = (function (target, props) {
    for (var _i = 0, _a = Object.keys(props); _i < _a.length; _i++) {
        var key = _a[_i];
        Object.defineProperty(target, key, {
            value: props[key],
            enumerable: false,
            writable: false,
            configurable: true
        });
    }
    return target;
});

/**
 * Returns the global object associated with provided element.
 *
 * @param {Object} target
 * @returns {Object}
 */
var getWindowOf = (function (target) {
    // Assume that the element is an instance of Node, which means that it
    // has the "ownerDocument" property from which we can retrieve a
    // corresponding global object.
    var ownerGlobal = target && target.ownerDocument && target.ownerDocument.defaultView;
    // Return the local global object if it's not possible extract one from
    // provided element.
    return ownerGlobal || global$1;
});

// Placeholder of an empty content rectangle.
var emptyRect = createRectInit(0, 0, 0, 0);
/**
 * Converts provided string to a number.
 *
 * @param {number|string} value
 * @returns {number}
 */
function toFloat(value) {
    return parseFloat(value) || 0;
}
/**
 * Extracts borders size from provided styles.
 *
 * @param {CSSStyleDeclaration} styles
 * @param {...string} positions - Borders positions (top, right, ...)
 * @returns {number}
 */
function getBordersSize(styles) {
    var positions = [];
    for (var _i = 1; _i < arguments.length; _i++) {
        positions[_i - 1] = arguments[_i];
    }
    return positions.reduce(function (size, position) {
        var value = styles['border-' + position + '-width'];
        return size + toFloat(value);
    }, 0);
}
/**
 * Extracts paddings sizes from provided styles.
 *
 * @param {CSSStyleDeclaration} styles
 * @returns {Object} Paddings box.
 */
function getPaddings(styles) {
    var positions = ['top', 'right', 'bottom', 'left'];
    var paddings = {};
    for (var _i = 0, positions_1 = positions; _i < positions_1.length; _i++) {
        var position = positions_1[_i];
        var value = styles['padding-' + position];
        paddings[position] = toFloat(value);
    }
    return paddings;
}
/**
 * Calculates content rectangle of provided SVG element.
 *
 * @param {SVGGraphicsElement} target - Element content rectangle of which needs
 *      to be calculated.
 * @returns {DOMRectInit}
 */
function getSVGContentRect(target) {
    var bbox = target.getBBox();
    return createRectInit(0, 0, bbox.width, bbox.height);
}
/**
 * Calculates content rectangle of provided HTMLElement.
 *
 * @param {HTMLElement} target - Element for which to calculate the content rectangle.
 * @returns {DOMRectInit}
 */
function getHTMLElementContentRect(target) {
    // Client width & height properties can't be
    // used exclusively as they provide rounded values.
    var clientWidth = target.clientWidth, clientHeight = target.clientHeight;
    // By this condition we can catch all non-replaced inline, hidden and
    // detached elements. Though elements with width & height properties less
    // than 0.5 will be discarded as well.
    //
    // Without it we would need to implement separate methods for each of
    // those cases and it's not possible to perform a precise and performance
    // effective test for hidden elements. E.g. even jQuery's ':visible' filter
    // gives wrong results for elements with width & height less than 0.5.
    if (!clientWidth && !clientHeight) {
        return emptyRect;
    }
    var styles = getWindowOf(target).getComputedStyle(target);
    var paddings = getPaddings(styles);
    var horizPad = paddings.left + paddings.right;
    var vertPad = paddings.top + paddings.bottom;
    // Computed styles of width & height are being used because they are the
    // only dimensions available to JS that contain non-rounded values. It could
    // be possible to utilize the getBoundingClientRect if only it's data wasn't
    // affected by CSS transformations let alone paddings, borders and scroll bars.
    var width = toFloat(styles.width), height = toFloat(styles.height);
    // Width & height include paddings and borders when the 'border-box' box
    // model is applied (except for IE).
    if (styles.boxSizing === 'border-box') {
        // Following conditions are required to handle Internet Explorer which
        // doesn't include paddings and borders to computed CSS dimensions.
        //
        // We can say that if CSS dimensions + paddings are equal to the "client"
        // properties then it's either IE, and thus we don't need to subtract
        // anything, or an element merely doesn't have paddings/borders styles.
        if (Math.round(width + horizPad) !== clientWidth) {
            width -= getBordersSize(styles, 'left', 'right') + horizPad;
        }
        if (Math.round(height + vertPad) !== clientHeight) {
            height -= getBordersSize(styles, 'top', 'bottom') + vertPad;
        }
    }
    // Following steps can't be applied to the document's root element as its
    // client[Width/Height] properties represent viewport area of the window.
    // Besides, it's as well not necessary as the <html> itself neither has
    // rendered scroll bars nor it can be clipped.
    if (!isDocumentElement(target)) {
        // In some browsers (only in Firefox, actually) CSS width & height
        // include scroll bars size which can be removed at this step as scroll
        // bars are the only difference between rounded dimensions + paddings
        // and "client" properties, though that is not always true in Chrome.
        var vertScrollbar = Math.round(width + horizPad) - clientWidth;
        var horizScrollbar = Math.round(height + vertPad) - clientHeight;
        // Chrome has a rather weird rounding of "client" properties.
        // E.g. for an element with content width of 314.2px it sometimes gives
        // the client width of 315px and for the width of 314.7px it may give
        // 314px. And it doesn't happen all the time. So just ignore this delta
        // as a non-relevant.
        if (Math.abs(vertScrollbar) !== 1) {
            width -= vertScrollbar;
        }
        if (Math.abs(horizScrollbar) !== 1) {
            height -= horizScrollbar;
        }
    }
    return createRectInit(paddings.left, paddings.top, width, height);
}
/**
 * Checks whether provided element is an instance of the SVGGraphicsElement.
 *
 * @param {Element} target - Element to be checked.
 * @returns {boolean}
 */
var isSVGGraphicsElement = (function () {
    // Some browsers, namely IE and Edge, don't have the SVGGraphicsElement
    // interface.
    if (typeof SVGGraphicsElement !== 'undefined') {
        return function (target) { return target instanceof getWindowOf(target).SVGGraphicsElement; };
    }
    // If it's so, then check that element is at least an instance of the
    // SVGElement and that it has the "getBBox" method.
    // eslint-disable-next-line no-extra-parens
    return function (target) { return (target instanceof getWindowOf(target).SVGElement &&
        typeof target.getBBox === 'function'); };
})();
/**
 * Checks whether provided element is a document element (<html>).
 *
 * @param {Element} target - Element to be checked.
 * @returns {boolean}
 */
function isDocumentElement(target) {
    return target === getWindowOf(target).document.documentElement;
}
/**
 * Calculates an appropriate content rectangle for provided html or svg element.
 *
 * @param {Element} target - Element content rectangle of which needs to be calculated.
 * @returns {DOMRectInit}
 */
function getContentRect(target) {
    if (!isBrowser) {
        return emptyRect;
    }
    if (isSVGGraphicsElement(target)) {
        return getSVGContentRect(target);
    }
    return getHTMLElementContentRect(target);
}
/**
 * Creates rectangle with an interface of the DOMRectReadOnly.
 * Spec: https://drafts.fxtf.org/geometry/#domrectreadonly
 *
 * @param {DOMRectInit} rectInit - Object with rectangle's x/y coordinates and dimensions.
 * @returns {DOMRectReadOnly}
 */
function createReadOnlyRect(_a) {
    var x = _a.x, y = _a.y, width = _a.width, height = _a.height;
    // If DOMRectReadOnly is available use it as a prototype for the rectangle.
    var Constr = typeof DOMRectReadOnly !== 'undefined' ? DOMRectReadOnly : Object;
    var rect = Object.create(Constr.prototype);
    // Rectangle's properties are not writable and non-enumerable.
    defineConfigurable(rect, {
        x: x, y: y, width: width, height: height,
        top: y,
        right: x + width,
        bottom: height + y,
        left: x
    });
    return rect;
}
/**
 * Creates DOMRectInit object based on the provided dimensions and the x/y coordinates.
 * Spec: https://drafts.fxtf.org/geometry/#dictdef-domrectinit
 *
 * @param {number} x - X coordinate.
 * @param {number} y - Y coordinate.
 * @param {number} width - Rectangle's width.
 * @param {number} height - Rectangle's height.
 * @returns {DOMRectInit}
 */
function createRectInit(x, y, width, height) {
    return { x: x, y: y, width: width, height: height };
}

/**
 * Class that is responsible for computations of the content rectangle of
 * provided DOM element and for keeping track of it's changes.
 */
var ResizeObservation = /** @class */ (function () {
    /**
     * Creates an instance of ResizeObservation.
     *
     * @param {Element} target - Element to be observed.
     */
    function ResizeObservation(target) {
        /**
         * Broadcasted width of content rectangle.
         *
         * @type {number}
         */
        this.broadcastWidth = 0;
        /**
         * Broadcasted height of content rectangle.
         *
         * @type {number}
         */
        this.broadcastHeight = 0;
        /**
         * Reference to the last observed content rectangle.
         *
         * @private {DOMRectInit}
         */
        this.contentRect_ = createRectInit(0, 0, 0, 0);
        this.target = target;
    }
    /**
     * Updates content rectangle and tells whether it's width or height properties
     * have changed since the last broadcast.
     *
     * @returns {boolean}
     */
    ResizeObservation.prototype.isActive = function () {
        var rect = getContentRect(this.target);
        this.contentRect_ = rect;
        return (rect.width !== this.broadcastWidth ||
            rect.height !== this.broadcastHeight);
    };
    /**
     * Updates 'broadcastWidth' and 'broadcastHeight' properties with a data
     * from the corresponding properties of the last observed content rectangle.
     *
     * @returns {DOMRectInit} Last observed content rectangle.
     */
    ResizeObservation.prototype.broadcastRect = function () {
        var rect = this.contentRect_;
        this.broadcastWidth = rect.width;
        this.broadcastHeight = rect.height;
        return rect;
    };
    return ResizeObservation;
}());

var ResizeObserverEntry = /** @class */ (function () {
    /**
     * Creates an instance of ResizeObserverEntry.
     *
     * @param {Element} target - Element that is being observed.
     * @param {DOMRectInit} rectInit - Data of the element's content rectangle.
     */
    function ResizeObserverEntry(target, rectInit) {
        var contentRect = createReadOnlyRect(rectInit);
        // According to the specification following properties are not writable
        // and are also not enumerable in the native implementation.
        //
        // Property accessors are not being used as they'd require to define a
        // private WeakMap storage which may cause memory leaks in browsers that
        // don't support this type of collections.
        defineConfigurable(this, { target: target, contentRect: contentRect });
    }
    return ResizeObserverEntry;
}());

var ResizeObserverSPI = /** @class */ (function () {
    /**
     * Creates a new instance of ResizeObserver.
     *
     * @param {ResizeObserverCallback} callback - Callback function that is invoked
     *      when one of the observed elements changes it's content dimensions.
     * @param {ResizeObserverController} controller - Controller instance which
     *      is responsible for the updates of observer.
     * @param {ResizeObserver} callbackCtx - Reference to the public
     *      ResizeObserver instance which will be passed to callback function.
     */
    function ResizeObserverSPI(callback, controller, callbackCtx) {
        /**
         * Collection of resize observations that have detected changes in dimensions
         * of elements.
         *
         * @private {Array<ResizeObservation>}
         */
        this.activeObservations_ = [];
        /**
         * Registry of the ResizeObservation instances.
         *
         * @private {Map<Element, ResizeObservation>}
         */
        this.observations_ = new MapShim();
        if (typeof callback !== 'function') {
            throw new TypeError('The callback provided as parameter 1 is not a function.');
        }
        this.callback_ = callback;
        this.controller_ = controller;
        this.callbackCtx_ = callbackCtx;
    }
    /**
     * Starts observing provided element.
     *
     * @param {Element} target - Element to be observed.
     * @returns {void}
     */
    ResizeObserverSPI.prototype.observe = function (target) {
        if (!arguments.length) {
            throw new TypeError('1 argument required, but only 0 present.');
        }
        // Do nothing if current environment doesn't have the Element interface.
        if (typeof Element === 'undefined' || !(Element instanceof Object)) {
            return;
        }
        if (!(target instanceof getWindowOf(target).Element)) {
            throw new TypeError('parameter 1 is not of type "Element".');
        }
        var observations = this.observations_;
        // Do nothing if element is already being observed.
        if (observations.has(target)) {
            return;
        }
        observations.set(target, new ResizeObservation(target));
        this.controller_.addObserver(this);
        // Force the update of observations.
        this.controller_.refresh();
    };
    /**
     * Stops observing provided element.
     *
     * @param {Element} target - Element to stop observing.
     * @returns {void}
     */
    ResizeObserverSPI.prototype.unobserve = function (target) {
        if (!arguments.length) {
            throw new TypeError('1 argument required, but only 0 present.');
        }
        // Do nothing if current environment doesn't have the Element interface.
        if (typeof Element === 'undefined' || !(Element instanceof Object)) {
            return;
        }
        if (!(target instanceof getWindowOf(target).Element)) {
            throw new TypeError('parameter 1 is not of type "Element".');
        }
        var observations = this.observations_;
        // Do nothing if element is not being observed.
        if (!observations.has(target)) {
            return;
        }
        observations.delete(target);
        if (!observations.size) {
            this.controller_.removeObserver(this);
        }
    };
    /**
     * Stops observing all elements.
     *
     * @returns {void}
     */
    ResizeObserverSPI.prototype.disconnect = function () {
        this.clearActive();
        this.observations_.clear();
        this.controller_.removeObserver(this);
    };
    /**
     * Collects observation instances the associated element of which has changed
     * it's content rectangle.
     *
     * @returns {void}
     */
    ResizeObserverSPI.prototype.gatherActive = function () {
        var _this = this;
        this.clearActive();
        this.observations_.forEach(function (observation) {
            if (observation.isActive()) {
                _this.activeObservations_.push(observation);
            }
        });
    };
    /**
     * Invokes initial callback function with a list of ResizeObserverEntry
     * instances collected from active resize observations.
     *
     * @returns {void}
     */
    ResizeObserverSPI.prototype.broadcastActive = function () {
        // Do nothing if observer doesn't have active observations.
        if (!this.hasActive()) {
            return;
        }
        var ctx = this.callbackCtx_;
        // Create ResizeObserverEntry instance for every active observation.
        var entries = this.activeObservations_.map(function (observation) {
            return new ResizeObserverEntry(observation.target, observation.broadcastRect());
        });
        this.callback_.call(ctx, entries, ctx);
        this.clearActive();
    };
    /**
     * Clears the collection of active observations.
     *
     * @returns {void}
     */
    ResizeObserverSPI.prototype.clearActive = function () {
        this.activeObservations_.splice(0);
    };
    /**
     * Tells whether observer has active observations.
     *
     * @returns {boolean}
     */
    ResizeObserverSPI.prototype.hasActive = function () {
        return this.activeObservations_.length > 0;
    };
    return ResizeObserverSPI;
}());

// Registry of internal observers. If WeakMap is not available use current shim
// for the Map collection as it has all required methods and because WeakMap
// can't be fully polyfilled anyway.
var observers = typeof WeakMap !== 'undefined' ? new WeakMap() : new MapShim();
/**
 * ResizeObserver API. Encapsulates the ResizeObserver SPI implementation
 * exposing only those methods and properties that are defined in the spec.
 */
var ResizeObserver = /** @class */ (function () {
    /**
     * Creates a new instance of ResizeObserver.
     *
     * @param {ResizeObserverCallback} callback - Callback that is invoked when
     *      dimensions of the observed elements change.
     */
    function ResizeObserver(callback) {
        if (!(this instanceof ResizeObserver)) {
            throw new TypeError('Cannot call a class as a function.');
        }
        if (!arguments.length) {
            throw new TypeError('1 argument required, but only 0 present.');
        }
        var controller = ResizeObserverController.getInstance();
        var observer = new ResizeObserverSPI(callback, controller, this);
        observers.set(this, observer);
    }
    return ResizeObserver;
}());
// Expose public methods of ResizeObserver.
[
    'observe',
    'unobserve',
    'disconnect'
].forEach(function (method) {
    ResizeObserver.prototype[method] = function () {
        var _a;
        return (_a = observers.get(this))[method].apply(_a, arguments);
    };
});

var index = (function () {
    // Export existing implementation if available.
    if (typeof global$1.ResizeObserver !== 'undefined') {
        return global$1.ResizeObserver;
    }
    return ResizeObserver;
})();

/* harmony default export */ const __WEBPACK_DEFAULT_EXPORT__ = (index);


/***/ }),

/***/ "module":
/***/ ((module) => {

"use strict";
module.exports = __WEBPACK_EXTERNAL_MODULE_module__;

/***/ }),

/***/ "uu5g04":
/***/ ((module) => {

"use strict";
module.exports = __WEBPACK_EXTERNAL_MODULE_uu5g04__;

/***/ }),

/***/ "uu5g05":
/***/ ((module) => {

"use strict";
module.exports = __WEBPACK_EXTERNAL_MODULE_uu5g05__;

/***/ }),

/***/ "../../node_modules/uu_appg01_devkit/node_modules/@babel/runtime/helpers/extends.js":
/***/ ((module) => {

function _extends() {
  module.exports = _extends = Object.assign ? Object.assign.bind() : function (target) {
    for (var i = 1; i < arguments.length; i++) {
      var source = arguments[i];
      for (var key in source) {
        if (Object.prototype.hasOwnProperty.call(source, key)) {
          target[key] = source[key];
        }
      }
    }
    return target;
  }, module.exports.__esModule = true, module.exports["default"] = module.exports;
  return _extends.apply(this, arguments);
}
module.exports = _extends, module.exports.__esModule = true, module.exports["default"] = module.exports;

/***/ })

/******/ 	});
/************************************************************************/
/******/ 	// The module cache
/******/ 	var __webpack_module_cache__ = {};
/******/ 	
/******/ 	// The require function
/******/ 	function __webpack_require__(moduleId) {
/******/ 		// Check if module is in cache
/******/ 		var cachedModule = __webpack_module_cache__[moduleId];
/******/ 		if (cachedModule !== undefined) {
/******/ 			return cachedModule.exports;
/******/ 		}
/******/ 		// Create a new module (and put it into the cache)
/******/ 		var module = __webpack_module_cache__[moduleId] = {
/******/ 			// no module.id needed
/******/ 			// no module.loaded needed
/******/ 			exports: {}
/******/ 		};
/******/ 	
/******/ 		// Execute the module function
/******/ 		__webpack_modules__[moduleId](module, module.exports, __webpack_require__);
/******/ 	
/******/ 		// Return the exports of the module
/******/ 		return module.exports;
/******/ 	}
/******/ 	
/************************************************************************/
/******/ 	/* webpack/runtime/compat get default export */
/******/ 	(() => {
/******/ 		// getDefaultExport function for compatibility with non-harmony modules
/******/ 		__webpack_require__.n = (module) => {
/******/ 			var getter = module && module.__esModule ?
/******/ 				() => (module['default']) :
/******/ 				() => (module);
/******/ 			__webpack_require__.d(getter, { a: getter });
/******/ 			return getter;
/******/ 		};
/******/ 	})();
/******/ 	
/******/ 	/* webpack/runtime/define property getters */
/******/ 	(() => {
/******/ 		// define getter functions for harmony exports
/******/ 		__webpack_require__.d = (exports, definition) => {
/******/ 			for(var key in definition) {
/******/ 				if(__webpack_require__.o(definition, key) && !__webpack_require__.o(exports, key)) {
/******/ 					Object.defineProperty(exports, key, { enumerable: true, get: definition[key] });
/******/ 				}
/******/ 			}
/******/ 		};
/******/ 	})();
/******/ 	
/******/ 	/* webpack/runtime/global */
/******/ 	(() => {
/******/ 		__webpack_require__.g = (function() {
/******/ 			if (typeof globalThis === 'object') return globalThis;
/******/ 			try {
/******/ 				return this || new Function('return this')();
/******/ 			} catch (e) {
/******/ 				if (typeof window === 'object') return window;
/******/ 			}
/******/ 		})();
/******/ 	})();
/******/ 	
/******/ 	/* webpack/runtime/hasOwnProperty shorthand */
/******/ 	(() => {
/******/ 		__webpack_require__.o = (obj, prop) => (Object.prototype.hasOwnProperty.call(obj, prop))
/******/ 	})();
/******/ 	
/******/ 	/* webpack/runtime/make namespace object */
/******/ 	(() => {
/******/ 		// define __esModule on exports
/******/ 		__webpack_require__.r = (exports) => {
/******/ 			if(typeof Symbol !== 'undefined' && Symbol.toStringTag) {
/******/ 				Object.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });
/******/ 			}
/******/ 			Object.defineProperty(exports, '__esModule', { value: true });
/******/ 		};
/******/ 	})();
/******/ 	
/******/ 	/* webpack/runtime/publicPath */
/******/ 	(() => {
/******/ 		__webpack_require__.p = "";
/******/ 	})();
/******/ 	
/************************************************************************/
/******/ 	
/******/ 	// startup
/******/ 	// Load entry module and return exports
/******/ 	// This entry module is referenced by other modules so it can't be inlined
/******/ 	var __webpack_exports__ = __webpack_require__("../target/webpack-tmp/hooks/hooks-build.js");
/******/ 	
/******/ 	return __webpack_exports__;
/******/ })()
;
});