const regeneratorRuntime = require("regenerator-runtime/runtime"); // support for async/await

if (typeof global !== "undefined") global.regeneratorRuntime = regeneratorRuntime;
else if (typeof window !== "undefined") window.regeneratorRuntime = regeneratorRuntime;

// don't show warning about requestAnimationFrame
// NOTE This must be before any other "require" statements.
// https://reactjs.org/blog/2017/09/26/react-v16.0.html#javascript-environment-requirements
global.requestAnimationFrame = function (callback) {
  return setTimeout(callback, 0);
};
global.cancelAnimationFrame = function (id) {
  return clearTimeout(id);
};

// jsdom 20.x doesn't export these yet to window, even if NodeJS has them
// https://github.com/jsdom/jsdom/issues/2524
if (typeof TextEncoder === "undefined") {
  const { TextEncoder, TextDecoder } = require("util");
  Object.assign(global, { TextEncoder, TextDecoder });
}

if (!global.fetch) {
  let { default: fetch, Headers, Request, Response } = require("node-fetch");
  global.fetch = fetch;
  global.Headers = Headers;
  global.Request = Request;
  global.Response = Response;
}

// add mocking of localStorage
require("jest-localstorage-mock");

// initialize Enzyme adapter for React
const Enzyme = require("enzyme");
const Adapter = require("enzyme-adapter-react-16");
Enzyme.configure({ adapter: new Adapter() });
