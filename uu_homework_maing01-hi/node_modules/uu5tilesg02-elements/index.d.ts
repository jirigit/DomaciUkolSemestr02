export = Uu5TilesElements;
declare namespace Uu5TilesElements {
    function Grid(props: any): any;
    namespace Grid {
        interface DefaultTile$Props {
            getRowProps?(...args: any): any;
            _getActionList?(...args: any): any;
        }
        function DefaultTile(props: DefaultTile$Props): any;
    }
    interface List$Props {
        view?: "table" | "grid";
    }
    function List(props: List$Props): any;
    namespace List {
        interface Cell$Props {
            type?: "select" | "drag" | "actionList";
        }
        function Cell(props: Cell$Props): any;
        namespace Cell {
            interface Select$Props {
                selectColorScheme?: any;
            }
            function Select(props: Select$Props): any;
            interface Drag$dragElementRef {
            }
            interface Drag$Props {
                dragElementRef?: ((...args: any)=>any) | Drag$dragElementRef;
            }
            function Drag(props: Drag$Props): any;
        }
        interface HeaderCell$Props {
            sorterKey?: string;
            filterKey?: string;
        }
        function HeaderCell(props: HeaderCell$Props): any;
        function FooterCell(props: any): any;
        interface DefaultTile$Props {
            getRowProps?(...args: any): any;
            _getActionList?(...args: any): any;
        }
        function DefaultTile(props: DefaultTile$Props): any;
    }
    function Table(props: any): any;
    namespace Table {
        interface Cell$Props {
            type?: "select" | "drag" | "actionList";
        }
        function Cell(props: Cell$Props): any;
        namespace Cell {
            interface Select$Props {
                selectColorScheme?: any;
            }
            function Select(props: Select$Props): any;
            interface Drag$dragElementRef {
            }
            interface Drag$Props {
                dragElementRef?: ((...args: any)=>any) | Drag$dragElementRef;
            }
            function Drag(props: Drag$Props): any;
        }
        interface HeaderCell$Props {
            sorterKey?: string;
            filterKey?: string;
        }
        function HeaderCell(props: HeaderCell$Props): any;
        function FooterCell(props: any): any;
    }
    interface Tile$dragElementRef {
    }
    interface Tile$Props {
        dragElementRef?: ((...args: any)=>any) | Tile$dragElementRef;
        selected?: boolean;
        toggleSelected?(...args: any): any;
    }
    function Tile(props: Tile$Props): any;
    interface _FilterInput$Props {
        isManager?: boolean;
    }
    function _FilterInput(props: _FilterInput$Props): any;
    interface _Toggle$Props {
        onClick?(...args: any): any;
        colorScheme?: any;
        significance?: "highlighted" | "distinct";
        size?: any;
        on?: boolean;
    }
    function _Toggle(props: _Toggle$Props): any;
}