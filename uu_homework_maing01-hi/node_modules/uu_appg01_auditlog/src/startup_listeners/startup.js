const { DaoFactory, DuplicateKey } = require("uu_appg01_objectstore");
const { LoggerFactory } = require("uu_appg01_core-logging");
const { Config } = require("uu_appg01_core-utils");
const { WARNINGS } = require("../abl/sys-audit-log-abl");

class Startup {
  /**
   * Initializing auditLog schemas on server start.
   */
  async onStartup() {
    if (DaoFactory.isDataStoreOn()) {
      const dao = require("../abl/sys-audit-log-abl.js").dao;
      const configDao = require("../abl/sys-audit-log-abl.js").configDao;
      await dao.createSchema();
      await configDao.createSchema();

      const logger = LoggerFactory.get("uuapp.auditlog.SysAuditLogAbl");

      // create auditLogConfig if it does not exist
      const asid = Config.get("asid");
      let asidConfig = await configDao.getByAwid(asid);
      if (!asidConfig) {
        asidConfig = { awid: asid, latestTransferredLogId: null, latestTransferDate: null, latestTransferState: null };

        try {
          await configDao.create(asidConfig);
        } catch (e) {
          if (e instanceof DuplicateKey) {
            logger.warn(WARNINGS.configRecordCreate.configRecordWasCreated.message);
          } else {
            throw e
          }
        }
      }
    }
  }
}

module.exports = Startup;
