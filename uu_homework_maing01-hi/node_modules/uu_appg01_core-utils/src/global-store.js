"use strict";

const storage = (typeof window === "undefined") ? global : window;
if (!storage._uuAppGlobalStores) {
  storage._uuAppGlobalStores = {};
}

/**
 * Global storage allowing to share objects accross multiple modules in various versions.
 */
class GlobalStore {

  /**
   * Returns global store with given name.
   * @param storeName Global store name.
   * @returns {GlobalStore} Instance of global store.
   */
  static get(storeName) {
    let store = storage._uuAppGlobalStores[storeName];
    if (!store) {
      store = storage._uuAppGlobalStores[storeName] = new GlobalStore();
    }
    return store;
  }

  /**
   * Creates new instance of global store.
   * @private
   */
  constructor() {
    this._attributes = {};
  }

  /**
   * Stores global attribute.
   * @param key Global attribute name.
   * @param value Global attribute value.
   */
  set(key, value) {
    this._attributes[key] = value;
  }

  /**
   * Returns global attribute.
   * @param key Global attribute name.
   * @returns {*} Global attribute value.
   */
  get(key) {
    return this._attributes[key];
  }

  /**
   * Deletes global attribute.
   * @param key Global attribute name.
   */
  delete(key) {
    delete this._attributes[key];
  }

}

module.exports = GlobalStore;
