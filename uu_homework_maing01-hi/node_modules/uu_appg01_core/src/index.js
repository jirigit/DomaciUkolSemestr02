"use strict";

let clientClass;
module.exports = {
  get AppClient() {
    let AppClient = require("uu_appg01_core-appclient");
    // support legacy API
    AppClient.Client = AppClient.AppClient;
    return AppClient;
  },
  get Client() {
    // Because of fix of https://uuapp.plus4u.net/uu-sls-maing01/93748ca422c44cf5b2184a0e8981bb72/issueDetail?id=6502f1f83d055c003c9eb9c2
    // we have to add also export of "Client", because else "const { Client } = require("uu_appg01_core");" will not work and will break
    // backward compatibility.
    if (!clientClass) {
      let { AppClient } = require("uu_appg01_core-appclient");
      clientClass = AppClient;
    }
    return clientClass;
  },
  set Client(clientOverride) {
    // This is for backward compatibility for components still using uuApp 4.x and mixing it with uuAppCore 5.x. In that case we need to allow
    // overriding of exported client which effectively nullifies the fix mentioned above in getter, but allows application to work like before.
    clientClass = clientOverride;
  },
  get Uri() {
    return require("uu_appg01_core-uri");
  },
  get Logging() {
    return require("uu_appg01_core-logging");
  },
  get Util() {
    return require("uu_appg01_core-utils");
  },
  get Utils() {
    return require("uu_appg01_core-utils");
  },
  get Perflog() {
    return require("uu_appg01_core-perflog");
  },
  get Authentication() {
    return require("uu_appg01_core-authentication");
  },
  get Error() {
    let Utils = require("uu_appg01_core-utils");
    return { Error: Utils.BaseError };
  }
};
