/* eslint-disable */
const artifactCode = string(/[a-zA-Z0-9_\/~&-.]{3,128}/);

const sysUuAppWorkspaceCreateDtoInType = shape({
  awidList: array(hexa32Code(), 128).isRequired("awid"),
  adviceNote: sysAdviceNoteDtoInType(),
  //Deprecated - use sys/uuAppWorkspace/assign to assign Licence to created AWIDs
  awid: hexa32Code().isRequired("awidList"),
  name: string(),
  description: string(),
  awidLicense: string(/\S+/).isRequired("awidList"),
  awidLicenseOwnerList: array(uuIdentity(),1,5).isRequired("awidList"),
  awidLicenseOwnerUri: uri(true),
  uuAwidEeCredentialsInitToken: string(32),
});

const sysUuAppWorkspaceAssignDtoInType = shape({
  awid: hexa32Code(),
  name: string(1000),
  description: string(5000),
  license: shape({
    type: string().isRequired(),
    size: integer()
  }).isRequired(),
  awidInitiatorList: array(uuIdentity(),1,5).isRequired(),
  awidLicenseOwnerUri: uri(),
  adviceNote: shape({
    message: uu5String(),
    severity: oneOf(["debug","info","warning","error","fatal"]),
    estimatedEndTime: datetime()
  })
})

const sysUuAppWorkspaceReassignDtoInType = shape({
  awid: hexa32Code().isRequired(),
  awidInitiatorList: array(uuIdentity(),1,5).isRequired(),
  adviceNote: shape({
    message: uu5String(),
    severity: oneOf(["debug","info","warning","error","fatal"]),
    estimatedEndTime: datetime()
  })
});

const sysUuAppWorkspaceUnassignDtoInType = shape({
  awid: hexa32Code().isRequired(),
  adviceNote: shape({
    message: uu5String(),
    severity: oneOf(["debug","info","warning","error","fatal"]),
    estimatedEndTime: datetime()
  })
});

const sysUuAppWorkspaceSetAssignedSysStateDtoInType = shape({
  adviceNote: sysAdviceNoteDtoInType()
});

const sysUuAppWorkspaceSetDtoInType = shape({
  name: string(64).isRequired("description"),
  description: string(256).isRequired("name"),
  adviceNote: sysAdviceNoteDtoInType()
});

const sysUuAppWorkspaceSetAuthTypeDtoInType = shape({
  authorizationStrategy: oneOf(["uuIdentityList", "roleGroupInterface", "artifact", "boundArtifact"]).isRequired(),
  // artifact
  artifactId: id(),
  artifactCode: artifactCode(),
  synchronizeArtifactBasicAttributes: boolean(),
  // boundArtifact
  uuTerritoryBaseUri: uri(true),
  boundArtifactId: id(),
  boundArtifactCode: artifactCode(),
  boundArtifactProfileMap: map(string(), array(string(), 1, 32), 32),
  // roleGroupInterface
  roleGroupUriMap: map(string(), uri(true), 32),
  // uuIdentityList
  permissionMap: map(uuIdentity(), array(string(), 1, 32))
});

const sysConnectArtifactDtoInType = shape({
  artifactUri: uri().isRequired(),
  synchronizeArtifactBasicAttributes: boolean()
});

const sysDeleteAppWorkspaceDtoInType = shape({
  awid: hexa32Code().isRequired()
});

const sysUuAppWorkspaceSuspendTypeDtoIn = shape({
  awid: hexa32Code().isRequired()
});

const sysUuAppWorkspaceCloseDtoInType = shape({
  awid: hexa32Code().isRequired()
});

const sysUuAppWorkspaceResumeTypeDtoIn = shape({
  awid: hexa32Code().isRequired()
});

const sysUuAppWorkspaceSetActiveSysStateDtoInType = shape({
  adviceNote: sysAdviceNoteDtoInType()
});

const sysUuAppWorkspaceSetRestrictedSysStateDtoInType = shape({
  adviceNote: sysAdviceNoteDtoInType()
});

const sysUuAppWorkspaceSetReadOnlySysStateDtoInType = shape({
  adviceNote: sysAdviceNoteDtoInType()
});

const sysUuAppWorkspaceListDtoInType = shape({
  awidList: array(hexa32Code(), 1, 1000),
  sysStateList: array(oneOf(["registered", "created", "assigned",  "active", "readOnly", "restricted", "suspended", "closed"]), 1, 10),
  pageInfo: shape({
    pageIndex: integer(0, null),
    pageSize: integer(0, null)
  })
});

const getConfigWorkspaceParameterDtoInType = shape({
  key: string()
});

const setConfigWorkspaceParameterDtoInType = shape({
  awid: hexa32Code(),
  key: string()
});
