"use strict";

const { Config } = require("uu_appg01_core-utils");
const { LoggerFactory } = require("uu_appg01_core-logging");
const { DaoFactory } = require("uu_appg01_datastore");

const AppWorkspaceComponent = require("../api/components/app-workspace");

const MIDDLEWARE_ORDER = 250;
const SYS_STATES_TO_BE_UNINITED = ["active"];

class AppWorkspaceUnInitMiddleware {
  constructor() {
    this.logger = LoggerFactory.get("AppWorkspaceUnInitMiddleware");
    this.name = "App Workspace uninit Handler";
    // noinspection JSUnusedGlobalSymbols
    this.order = MIDDLEWARE_ORDER;
    this.asid = Config.get("asid");
    this.isDataStoreOn = DaoFactory.isDataStoreOn();
  }

  async post(req, res, next) {
    if (!this.isDataStoreOn) {
      return next();
    }

    const uri = res.locals.uri;
    if (uri.getAwid() !== this.asid && uri.getUseCase() === "sys/uuAppWorkspace/uninit") {
      let workspace = await AppWorkspaceComponent.get(uri.getAwid());
      if (SYS_STATES_TO_BE_UNINITED.includes(workspace.sysState)) {
        if (workspace.awidLicenseOwnerList) {
          await AppWorkspaceComponent.setCreatedSysState(uri.getAwid());
        } else {
          await AppWorkspaceComponent.setAssignedSysState(uri.getAwid());
        }
        //TODO baseregistry
      }
    }
    next();
  }
}

module.exports = AppWorkspaceUnInitMiddleware;
