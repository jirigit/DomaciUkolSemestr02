export = Plus4U5App;
declare namespace Plus4U5App {
    function Error(props: any): any;
    interface HorizontalMenu$Props {
        itemList?: any[];
    }
    function HorizontalMenu(props: HorizontalMenu$Props): any;
    function Plus4UButton(props: any): any;
    interface PositionBar$info {
        help?: any;
        context?: any;
        flsBaseUri?: string;
        slsBaseUri?: string;
    }
    interface PositionBar$stickyVisibility {
    }
    interface PositionBar$Props {
        actionList?: any;
        itemList?: any;
        activeItem?: string;
        onActiveItemChange?(...args: any): any;
        tabsColorScheme?: any;
        type?: "dropdown" | "tabs";
        navigation?: any;
        view?: "tall" | "short";
        autoScale?: boolean;
        info?: any | PositionBar$info;
        stickyVisibility?: string | PositionBar$stickyVisibility;
    }
    function PositionBar(props: PositionBar$Props): any;
    interface RouteBar$Props {
        appActionList?: any;
        routeMenu?: any | ((...args: any)=>any);
        navigation?: boolean;
    }
    function RouteBar(props: RouteBar$Props): any;
    interface RouteController$routeDataObject$data {
    }
    interface RouteController$routeDataObject$errorData {
    }
    interface RouteController$routeDataObject$pendingData {
    }
    interface RouteController$routeDataObject {
        state?: string;
        data?: RouteController$routeDataObject$data;
        errorData?: RouteController$routeDataObject$errorData;
        pendingData?: RouteController$routeDataObject$pendingData;
        handlerMap?: {
        };
    }
    interface RouteController$Props {
        requireSubAppData?: boolean;
        routeDataObject?: RouteController$routeDataObject;
    }
    function RouteController(props: RouteController$Props): any;
    interface RouteHeader$title {
    }
    interface RouteHeader$Props {
        title?: string | RouteHeader$title;
    }
    function RouteHeader(props: RouteHeader$Props): any;
    function RouteHeaderArtifact(props: any): any;
    interface Router$Props {
        routeMap?: {
        };
        errorFallback?(...args: any): any;
    }
    function Router(props: Router$Props): any;
    interface Spa$lsi {
    }
    interface Spa$localNavigation {
        display?: "popover" | "sidebar";
        type?: "expanded" | "collapsed";
        open?: boolean;
    }
    interface Spa$Props {
        routeMap?: any;
        errorFallback?(...args: any): any;
        lsi?: Spa$lsi;
        localNavigation?: Spa$localNavigation;
        displayTop?: boolean;
    }
    function Spa(props: Spa$Props): any;
    interface SpaError$Props {
        error?: any;
    }
    function SpaError(props: SpaError$Props): any;
    function SpaPending(props: any): any;
    interface VerticalMenu$Props {
        itemList?: any[];
    }
    function VerticalMenu(props: VerticalMenu$Props): any;
    interface withRoute$1 {
        authenticated?: any;
        requireSubAppData?: any;
    }
    function withRoute(Component: any, _?: withRoute$1): any;
    namespace withRoute {
        const ERROR_NOT_AUTHN: "uu-plus4u5g02/not-authenticated";
    }
    function _Navigator(props: any): any;
}